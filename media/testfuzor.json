{
	"EAID Boomi to Azure Mirgration": {
		"Boomi to Azure Detailed Design Review": [
			{
				"id": "8f280ebf-e537-4063-83c9-2b6c34bb5f46",
				"name": "Boomi to Azure Detailed Design Review",
				"description": "Review a detailed design documentation using a target component, detailed design and the relevant current state documentation.",
				"prompt": "Act as an expert Azure Architect. I have shared the original detailed design of an Azure component generated from Current State documentation and High level design document in the earlier messages.\nYour task is to review and refine the Detailed design to ensure:\n\n    - Cross-check the detailed design against the current state documentation to ensure consistency and accuracy.\n    - Validate that all design principles outlined in the Detailed design prompt have been followed.\n    - Identify and address any gaps, ambiguities, or incorrect assumptions in the Detailed design.\n    - Ensure the sequence diagrams reflect the correct process flow, systems, and interactions.\n    - Add or improve documentation details where necessary for clarity and completeness.\n    - Updated the mapping to ensure all fields are correct and have been added.\n    - Compare the sequence diagram against the current state documents and check if it is correct.\n\nKey Review Steps:\n    - Review diagrams for correctness, adherence to best practices, and clarity. Revise or redraw if required.\n    - Evaluate business logic and ensure rules and transformations are aligned with the integration purpose.\n    - Ensure all mapping and transformation rules are correctly describer. Add missing mapping tables if needed\n    - Add or clarify key decisions and assumptions where appropriate, especially regarding technology choices and their alignment with Azure best practices.\n\nMapping:\n    - Remove mapping details that is unrelated based on the component and the component's destination system.\n    - You must ensure the mapping tables are as complete and detailed as possible.\n    - You must add any tables that are missing.\n        e.g. If there are 4 processes there must be 4 tables.\n        e.g. Each process must have a corresponding table.\n    - Use this format to add tables:\n        [Destination System A]: [Process B]\n        | Source        | Source Field      | Source Path            | Type   | Conversion Logic | Destination   | Destination Field   | Destination Path         | Type   |\n        |---------------|-------------------|------------------------|--------|------------------|---------------|---------------------|--------------------------|--------|\n    - Fix any mapping that is incorrect.\n    - Do not combine tables instead create new tables.\n\nOutput Requirements:\n    - The revised DD with all corrections and improvements.\n    - A \"Changelog\" section at the end of the Detaile Design document summarising all modifications, including what was added, updated, or removed and why.\n\n### Inputs:\n- **Target Component**: \n{{content::file}}\n- **Detailed  Design Document**: \n{{detailed::file}}\n- **Current State Documentation**: \n{{current::file}}\n",
				"input": [
					{
						"name": "content",
						"description": "Input file",
						"type": "input",
						"value": "/",
						"required": true
					},
					{
						"name": "detailed",
						"description": "Input for detailed",
						"required": true,
						"type": "string",
						"value": "/"
					},
					{
						"name": "current",
						"description": "Input for current",
						"required": true,
						"type": "string",
						"value": "/"
					}
				],
				"outputFolder": "/",
				"outputFileName": "review_output.md",
				"temperature": 0.7,
				"processFormat": "eachFile"
			}
		],
		"Workshop User Story": [
			{
				"id": "feb00799-a344-452f-9195-41f5e59a862c",
				"name": "Workshop User Story",
				"description": "Generate user story with acceptance criteria for transition an integration.",
				"prompt": "You are a Product Owner tasked with creating user stories and acceptance criteria for a migration project transitioning integrations from Boomi to Azure Integrations.\nYou have been given a target integration to write a user story with multiple acceptance criteria for. \nOnly use information fron the content that is relevant to the target integration.\nUsing the provided requirements as your primary reference, generate a Markdown document that includes one detailed user story and comprehensive acceptance criteria covering all possible scenarios.\nDo not genereate ```markdown```\n\n## Requirements\n\n### User Story\n\n- **Format:** Use the INVEST principles to ensure the user story is Independent, Negotiable, Valuable, Estimable, Small, and Testable.\n- **Template:** As a [role], I want to [action], so that [value/benefit].\n- **Focus:** Emphasize the desired outcome without delving into implementation details.\n\n### Acceptance Criteria\n\n- **Format:** Utilize Gherkin syntax for clarity. Given [context], When [action], Then [result].\n- **Details:** Ensure criteria cover functional requirements (what the system should do).\nInclude non-functional requirements (e.g., performance, security, scalability).\nSpecify measurable outcomes where possible (e.g., timeframes, data size limits).\nInclude error handling and edge cases (e.g., invalid input, system failures).\nEnsure all criteria are testable and verifiable.- **Specific & Measurable:** Clearly define expected outcomes and conditions.\n- **Comprehensive Scenarios:** Include all relevant scenarios, including edge cases and error conditions.\n- **Modular:** Provide acceptance criteria for each sub process. Prefer new acceptance criteria over using \"AND\" syntax\".\n- **Concise:** Provide detailed yet straightforward criteria to ensure clarity and ease of understanding for Testers, Business Analysts, and Developers.\n\n## Additional Guidelines\n\n- **Content Scope:** Focus solely on the functionality of the target integration as described in the documentation. Do not introduce any assumptions or additional information.\n- **Documentation Structure:** The provided content includes requirements. Ensure that the generated user story and acceptance criteria accurately reflect these details.\n\n## Provided Documentation\n\nTarget Integration:\n{{integration::file}}\n\n\nContent:\n{{content::file}}",
				"input": [
					{
						"name": "integration",
						"description": "Input for integration",
						"required": true,
						"type": "string",
						"value": "/"
					},
					{
						"name": "content",
						"description": "Input file",
						"type": "input",
						"value": "/",
						"required": true
					}
				],
				"outputFolder": "/",
				"outputFileName": "user_story_output.md",
				"temperature": 0.7,
				"processFormat": "eachFile"
			}
		],
		"Folder 1": {
			"Azure Components": [
				{
					"id": "41d7843c-cdf9-4e0c-aeee-a40b78911fcf",
					"name": "Azure Components",
					"description": "Using a HLD generate a list of component required.",
					"prompt": "Act as an expert Azure Architect. You will be provided with a High-Level Design (HLD) for an integration implemented in Boomi.\nYour task is to:\n- Identify and list all the Azure components required by the high-level design.\n- Get details from the table that contains the components\n- Present the list in JSON format.\n- Return only the JSON content as it will be directly used to create a JSON file\n- Do not return ```json``` or \\n\n\nExample:\n{\n    \"AzureComponents\": [\n        {\n            \"ID\": 1,\n            \"Name\": \"WA2\",\n            \"Description\": \"Logic App\",\n            \"System\": \"Azure Logic App\"\n        },\n        {\n            \"ID\": 2,\n            \"Name\": \"MS221\",\n            \"Description\": \"Function App\",\n            \"System\": \"Azure Function\"\n        }\n    ]\n}\n\nSystem examples:\n- Azure Logic App\n- Azure Function\n- Azure Virtual Machine\n- Azure App Service\n- Azure Kubernetes Service (AKS)\n- Azure Container Instance\n- Azure Batch\n- Azure API Management\n- Azure Service Bus\n- Azure Event Grid\n- Azure Event Hub\n- Azure Data Factory\n- Azure Blob Storage\n- Azure Disk Storage\n- Azure File Storage\n- Azure Queue Storage\n- Azure Data Lake Storage\n- Azure SQL Database\n- Azure Cosmos DB\n- Azure Database for MySQL\n- Azure Database for PostgreSQL\n- Azure Cache for Redis\n- Azure Virtual Network (VNet)\n- Azure Load Balancer\n- Azure Application Gateway\n- Azure Traffic Manager\n- Azure ExpressRoute\n- Azure DNS\n- Azure Active Directory (AAD)\n- Azure Key Vault\n- Azure Security Center\n- Azure Sentinel\n- Azure DDoS Protection\n- Azure Monitor\n- Azure Application Insights\n- Azure Automation\n- Azure Cost Management\n- Azure Log Analytics\n- Azure Cognitive Service\n- Azure Machine Learning\n- Azure Bot Service\n- Azure OpenAI Service\n- Azure DevOps\n- Azure Repos\n- Azure Pipelines\n- Azure Boards\n- Azure IoT Hub\n- Azure IoT Central\n- Azure Digital Twin\n- Azure Time Series Insight\n- Azure Arc\n- Azure Stack\n\nCurrent State Documentation:\n{{content::file}}",
					"input": [
						{
							"name": "content",
							"description": "Input file",
							"type": "input",
							"value": "/",
							"required": true
						}
					],
					"outputFolder": "/",
					"outputFileName": "components_output.md",
					"temperature": 0.7,
					"processFormat": "eachFile"
				}
			],
			"Azure HLD Mermaid Diagram": [
				{
					"id": "ff99991d-f2a0-40e9-adea-b6b5cadc7a1a",
					"name": "Azure HLD Mermaid Diagram",
					"description": "Using a high level design to generate a mermaid diagram.",
					"prompt": "Act as an expert Azure Architect. You will be provided with the High-Level Design (HLD) template below and the current state documentation of an integration implemented in Boomi.\nYour task is to:\n\n- Analyse the current Boomi-based integration.\n- Design a C4 models for the integration in Azure using like for like functionality\n- Ensure the solution adheres to best practices for Azure, including scalability, cost-efficiency, security, and maintainability.\n\nDesign principles:\n\n- Use Azure services that best match the functionality of the Boomi components.\n- Use Azure Logic App or Azure Data Factory for simple orchestration like fetching files from SFTP or reading emails or sending emails\n- Use Azure Functions for complex business logic including transformations, validation, DB queries, Snowflake requests, or API calls\n- Use Azure Service Bus decoupling if required\n- Use Azure Blob Storage for storing files if applicable\n- Do not use any Database. Integration layer does not require a database\n- Use Keep It Simple Stupid principle. Do not add components if current Boomi documentation doesnt need it\n- Oracle, Snowflake writes and transformation can happen from single function app.\n- Logic App and Azure ADF can trigger Function Apps directly and do not need ServiceBus to decouple it.\n- There is no requirement for extensibility. Point to point integration is preferred.\n- Name the components:\n      - Logic Apps - Wxx Name of Workflow\n      - Function Apps - MSxx Name of Task\n      - ADF - DFPxx Name of Workflow\n- Return only mermaid diagrams in the correct syntax\n\n# **1.0 C4 Model**\n[Create three levels of a C4 diagram using Mermaid Syntax: Context, Containers, Components]\n\nCurrent State Documentation:\n{{content::file}}",
					"input": [
						{
							"name": "content",
							"description": "Input file",
							"type": "input",
							"value": "/",
							"required": true
						}
					],
					"outputFolder": "/",
					"outputFileName": "mermaid_output.md",
					"temperature": 0.7,
					"processFormat": "eachFile"
				}
			],
			"Boomi Subprocess Documentation Generation": [
				{
					"id": "d2bbc3b5-44c9-4a17-841e-160c98de5f00",
					"name": "Boomi Subprocess Documentation Generation",
					"description": "Uses the folder structure and codebase of the subprocess component and its dependencies to generate markdown documentation for the component.",
					"prompt": "You are tasked with documenting a generic integration process based on the provided Boomi entry \ncomponent and dependencies code. \nThis documentation must be clear and comprehensible to a Technical Business Analyst, avoiding platform-specific implementation details and focusing on business logic, processes, and technical requirements.\n\nKey Requirements:\n   - Provide the results in markdown format\n   - Give a title to the document based on the integration process.\n   - Describe the logic and process in plain English without using programming code or platform-specific IDs.\n   - Avoid specific IDs, or proprietary terms. Use high-level, descriptive names.\n   - Include API paths, database queries, business rules, transformation logic, and assumptions.\n   - Provide detailed explanation of the processes and technical details.\n   - Keep the response to less than or equal to 500 lines.\n   - The documentation should follow the structure outlined below:\n\n1. **Business Outcomes**:\n   - Describe the key business benefits and outcomes from these integrations.\n   - Explain how these integrations impact business operations and objectives.\n\n2. **Requirements**:\n   - List the functional requirements derived from the integrations.\n   - Include any non-functional requirements (e.g., performance, security, compliance).\n   - Mention any dependencies or prerequisites needed for these integrations.\n\n3. **Process**:\n   - List the processes that occur from the integrations.\n   - Detail the orchestration logic, including where subprocesses are triggered and how they interact with the parent process. Provide name of the subprocesses (Use names from code) and how they are invoked.\n   - Make sure to call out if the input is a list of objects or a single object.\n   - Avoid repeating subprocess logic or mappings already documented.\n   - Highlight any decision-making logic (mapping, routing) or branching flows in the parent process.\n   - Describe each step in the process in detail calling out the branching logics, decision-making, and interactions. Use bullet points or numbered lists.\n\n4. **Technical Details**:\n   - Specify DB names, API paths, and other critical technical information used in the integration.\n   - Provide any DB queries used in the integration.\n   - Highlight how inputs are processed, transformed, and delivered to achieve the desired outcome.\n   - Detail out any error-handling, monitoring, queries, api paths, file names etc in the parent process. All technical details from code should be included here.\n\n5. **Mapping**:\n   - Provide a table detailing source, destination, and transformation logic for any data mappings.\n   - Include mapping done in sub processes and dependencies.\n   - Must include all the fields of the source and destination in the mapping table if there is no mapping for either source or destination put as N/A.\n   - Create different tables for each source and destination combination.\n   - Write a note regarding if the mapping represents a list of objects or a single object. Eg: A file with multiple records being mapped to a list of records in the destination.\n\n   Use the following rules:\n      - Only include fields explicitly mentioned in the document.\n      - Highlight any ambiguities or missing information.\n   \n   1. **Source**: The name of the source system.\n   2. **Source Field**: The name of the field in the source system.\n   3. **Source Path**: The pathway of the field in the source system \n   4. **Type**: The data type of the field in the source system.(e.g., string, integer, date).\n   5. **Conversion Logic**: Any rules or transformations applied (e.g., format changes, calculations).\n   6. **Destination**: The name of the destination system.\n   7. **Destination Field**: The name of the field in the destination system.\n   8. **Destination Path**: The pathway of the field in the destination system.\n   9. **Type**: The data type of the field in the destination system.(e.g., string, integer, date).\n\n   Example:\n      | [Source]        | Source Field      | Source Path            | Type   | Conversion Logic | [Destination] | Destination Field   | Destination Path         | Type   |\n      |-----------------|-------------------|------------------------|--------|------------------|---------------|---------------------|--------------------------|--------|\n      | ASX Data        | Code              | Record/Elements/Code   | String | Direct Map       | Oracle DB     | code                | Statement/Fields/code    | String |\n\nYou have been provided with:\n   - The folder structure of the Boomi integration folder.\n   - The XML code representing the boomi components\n\nExample Content\nEntry Component:\n   - Entry point of the process.\n   -Output should contain any processing logic and how it orchestrates the process.\nDependencies:\n   - Output should contain business logic and purpose of this dependency within the process.\n   - Detail any logic, rules, or mappings used and how they connect to the overall workflow.\n\n\nHere is the folder structure: \n{{dir_struct::file}}\n\nHere is the entry component followed by the dependencies: \n{{content::file}}",
					"input": [
						{
							"name": "dir_struct",
							"description": "Input for dir_struct",
							"required": true,
							"type": "string",
							"value": "/"
						},
						{
							"name": "content",
							"description": "Input file",
							"type": "input",
							"value": "/",
							"required": true
						}
					],
					"outputFolder": "/",
					"outputFileName": "subprocess_output.md",
					"temperature": 0.7,
					"processFormat": "eachFile"
				}
			],
			"Sub 1": {
				"Boomi Impl Documentation Generation": [
					{
						"id": "ccb6c144-7271-4ca0-8ec4-3d77f74de8f5",
						"name": "Boomi Impl Documentation Generation",
						"description": "Uses the folder structure and codebase of the impl component and its dependencies to generate markdown documentation for the component.",
						"prompt": "You are tasked with documenting a parent integration process based on the provided Boomi entry component and dependencies code. The documentation must focus on the orchestration flow and process logic while avoiding any replication of details already present in the subprocesses. Your task is to create a clear and comprehensible document targeted at a Technical Business Analyst, focusing on the overall flow and dependencies rather than implementation specifics.\n\nKey Requirements:\n\nFormat:\n\nProvide the results in markdown format.\nScope:\n\nAvoid repeating mappings, technical details, or processes already documented in the subprocesses.\nHighlight where and how subprocesses are triggered within the parent process.\nInclude only new information relevant to the orchestration, logic, mapping or interactions between subprocesses.\nFocus:\n\nProvide a plain-English description of the parent process\u00e2\u20ac\u2122s orchestration logic and decision flows.\nMention business outcomes, functional and non-functional requirements, and high-level technical requirements not covered in the subprocesses.\nGive a title to the document based on the integration process.\nKeep the focus on overall orchestration and how subprocesses are invoked or coordinated.\nStructure:\n\nUse the following structure for the documentation:\n1. Business Outcomes\nDescribe the key business benefits and outcomes derived from the parent process.\nHighlight the overall impact of orchestrating the subprocesses on business goals.\n2. Requirements\nFunctional Requirements:\nList high-level objectives the parent process addresses.\nMention any overarching data or functionality relevant to the orchestration.\nNon-Functional Requirements:\nOutline critical performance, security, scalability, and compliance considerations specific to the parent process.\nDependencies:\nMention system dependencies and how the parent process interacts with subprocesses and external systems.\n3. Process\nHigh-Level Overview:\nDescribe the role of the parent process in the overall integration.\nStep-by-Step Explanation:\n   - Detail the orchestration logic, including where subprocesses are triggered and how they interact with the parent process. Provide name of the subprocesses (Use names from code) and how they are invoked.\n   - Avoid repeating subprocess logic or mappings already documented.\n   - Highlight any decision-making logic (mapping, routing) or branching flows in the parent process.\n   - Describe each step in the process in detail calling out the branching logics, decision-making, and interactions. Use bullet points or numbered lists.\n4. Technical Details\nInclude only high-level technical details related to orchestration (e.g., APIs invoked by the parent process, database dependencies specific to the parent process).\nDo not repeat technical details, queries, or mappings from subprocesses.\nDetail out any error-handling, monitoring, queries, mapping, api paths, file names etc in the parent process. All technical details from parent code should be included here.\n\nHere is the folder structure: \n{{dir_struct::file}}\n\nHere is the entry component followed by the dependencies: \n{{content::file}}",
						"input": [
							{
								"name": "dir_struct",
								"description": "Input for dir_struct",
								"required": true,
								"type": "string",
								"value": "/"
							},
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							}
						],
						"outputFolder": "/",
						"outputFileName": "impl_output.md",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				],
				"Boomi Review Documentation": [
					{
						"id": "b8663f68-5ca0-444e-bb4f-2a50c45dec8e",
						"name": "Boomi Review Documentation",
						"description": "Reviewing the documentation and returning the edited version.",
						"prompt": "You are an expert Solution Architect specializing in reviewing Boomi integration code and its accompanying documentation.\nYour task is to thoroughly analyze the above Boomi integration code and the generated documentation to ensure that the\ndocumentation accurately reflects the current state of the Boomi integration.\n\nCore Requirements\n    - Process Flow: Verify that the documented steps accurately follow the sequence of operations in the code.\n    - Data Mapping: Ensure that all data mappings described in the documentation precisely match those implemented in the code.\n    - Endpoints: Confirm that all API URLs, paths, and protocols documented are correct and correspond to those used in the code.\n    - Error Handling: Check that the documentation correctly describes the error handling mechanisms, including error processes and messages, as implemented in the code.\n    - Business Rules: Validate that all business rules, conditions, and logic outlined in the documentation align with those in the code.\n    - Field Details: Ensure that all field names, data types, formats, and validations are accurately documented and match the code.\n    - Scheduling: Verify that the scheduling and triggering details in the documentation correspond to those configured in the code.\n    - Security: Check that the documentation accurately describes all security measures, including encryption methods and authentication protocols used in the integration.\n    - Dependencies: Ensure that all external systems, services, and configurations that the integration depends on are correctly identified and described in the documentation.\n    - Data Transformation: Confirm that all data transformation rules and logic are thoroughly documented and match the transformations applied in the code.\n    - Spelling and Grammar: Correct any spelling, grammar, or formatting issues in the documentation. Use Australian English conventions.\n\nInstructions\n    - Accuracy: Only make necessary corrections to ensure the documentation accurately reflects the code. Do not alter the overall structure of the documentation.\n    - Completeness: Ensure that all aspects of the integration are documented. If any sections are missing, add them with accurate information based on the code.\n    - Clarity: Improve the clarity and readability of the documentation where possible without changing the technical content.\n    - Formatting: Maintain consistent formatting throughout the documentation. Ensure that headings, lists, and tables are properly structured.\n    - Change Log: At the end of the documentation, include a Change Log section that details all modifications made during the review. Each entry should include the date of the change, a brief description of what was changed, and the reason for the change.\n    - Output: Return the complete documentation in markdown format, ensuring all sections are included. Do not include markdown code block delimiters (i.e., no ```markdown).\n\nCodebase:\n{{codebase::file}}\n\nDocumentation:\n{{content::file}}",
						"input": [
							{
								"name": "codebase",
								"description": "Input for codebase",
								"required": true,
								"type": "string",
								"value": "/"
							},
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							}
						],
						"outputFolder": "/",
						"outputFileName": "reviewed_output.md",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				],
				"Boomi Sched Documentation Generation": [
					{
						"id": "972d18cd-ac48-44d9-aef7-25b9b6752242",
						"name": "Boomi Sched Documentation Generation",
						"description": "Uses the folder structure and codebase of the sched component and its dependencies to generate markdown documentation for the component.",
						"prompt": "You are tasked with documenting a parent integration process based on the provided Boomi entry component and dependencies code. The documentation must focus on the orchestration flow and process logic while avoiding any replication of details already present in the subprocesses. Your task is to create a clear and comprehensible document targeted at a Technical Business Analyst, focusing on the overall flow and dependencies rather than implementation specifics.\n\nKey Requirements:\n\nFormat:\n\nProvide the results in markdown format.\nScope:\n\nAvoid repeating mappings, technical details, or processes already documented in the subprocesses.\nHighlight where and how subprocesses are triggered within the parent process.\nInclude only new information relevant to the orchestration, logic, mapping or interactions between subprocesses.\nFocus:\n\nProvide a plain-English description of the parent process\u00e2\u20ac\u2122s orchestration logic and decision flows.\nMention business outcomes, functional and non-functional requirements, and high-level technical requirements not covered in the subprocesses.\nGive a title to the document based on the integration process.\nKeep the focus on overall orchestration and how subprocesses are invoked or coordinated.\nStructure:\n\nUse the following structure for the documentation:\n1. Business Outcomes\nDescribe the key business benefits and outcomes derived from the parent process.\nHighlight the overall impact of orchestrating the subprocesses on business goals.\n2. Requirements\nFunctional Requirements:\nList high-level objectives the parent process addresses.\nMention any overarching data or functionality relevant to the orchestration.\nNon-Functional Requirements:\nOutline critical performance, security, scalability, and compliance considerations specific to the parent process.\nDependencies:\nMention system dependencies and how the parent process interacts with subprocesses and external systems.\n3. Process\nHigh-Level Overview:\nDescribe the role of the parent process in the overall integration.\nStep-by-Step Explanation:\n   - Detail the orchestration logic, including where subprocesses are triggered and how they interact with the parent process. Provide name of the subprocesses (Use names from code) and how they are invoked.\n   - Avoid repeating subprocess logic or mappings already documented.\n   - Highlight any decision-making logic (mapping, routing) or branching flows in the parent process.\n   - Describe each step in the process in detail calling out the branching logics, decision-making, and interactions. Use bullet points or numbered lists.\n4. Technical Details\nInclude only high-level technical details related to orchestration (e.g., APIs invoked by the parent process, database dependencies specific to the parent process).\nDo not repeat technical details, queries, or mappings from subprocesses.\nDetail out any error-handling, monitoring, queries, mapping, api paths, file names etc in the parent process. All technical details from parent code should be included here.\n\nHere is the folder structure: \n{{dir_struct::file}}\n\nHere is the entry component followed by the dependencies: \n{{content::file}}",
						"input": [
							{
								"name": "dir_struct",
								"description": "Input for dir_struct",
								"required": true,
								"type": "string",
								"value": "/"
							},
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							}
						],
						"outputFolder": "/",
						"outputFileName": "sched_output.md",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				]
			}
		},
		"Folder 2": {
			"Boomi to Azure User Story Generation": [
				{
					"id": "f94a58a0-6913-45e9-9ed3-5505473588d7",
					"name": "Boomi to Azure User Story Generation",
					"description": "Generating a user story with multiple acceptance criteria to build the azure equivalent functionality of the boomi documentation",
					"prompt": "You are a Product Owner tasked with creating user stories and acceptance criteria for a migration project transitioning\n integrations from Boomi to Azure Integrations.\n Using the provided current state documentation as your primary reference, generate a Markdown document that includes\n one detailed user story and comprehensive acceptance criteria covering all possible scenarios.\n\n## Requirements\n\n### User Story\n\n- **Format:** Use the INVEST principles to ensure the user story is Independent, Negotiable, Valuable, Estimable, Small, and Testable.\n- **Template:** As a [role], I want to [action], so that [value/benefit].\n- **Focus:** Emphasize the desired outcome without delving into implementation details.\n\n### Acceptance Criteria\n\n- **Format:** Utilize Gherkin syntax for clarity. Given [context], When [action], Then [result].\n- **Details:** Ensure criteria cover functional requirements (what the system should do).\nInclude non-functional requirements (e.g., performance, security, scalability).\nSpecify measurable outcomes where possible (e.g., timeframes, data size limits, specific mapping).\nInclude error handling and edge cases (e.g., invalid input, system failures).\nEnsure all criteria are testable and verifiable.\n- **Specific & Measurable:** Clearly define expected outcomes and conditions.\n- **Comprehensive Scenarios:** Include all relevant scenarios, including edge cases and error conditions.\n- **Modular:** Provide acceptance criteria for each sub process. Prefer new acceptance criteria over using \"AND\" syntax\".\n- **Concise:** Provide detailed yet straightforward criteria to ensure clarity and ease of understanding for Testers, Business Analysts, and Developers.\n\n## Additional Guidelines\n\n- **Content Scope:** Focus solely on the functionality of the integration as described in the documentation. Do not introduce any assumptions or additional information.\n- **Documentation Structure:** The provided content includes documentation for each process and subprocess. Ensure that the generated user story and acceptance criteria accurately reflect these details.\n\n## Provided Documentation\n\n{{content::file}}",
					"input": [
						{
							"name": "content",
							"description": "Input file",
							"type": "input",
							"value": "/",
							"required": true
						}
					],
					"outputFolder": "/",
					"outputFileName": "userstory_output.md",
					"temperature": 0.7,
					"processFormat": "eachFile"
				}
			],
			"Boomi to Azure User Story Review": [
				{
					"id": "771d31ed-d7cb-4200-ba3f-411cc181115b",
					"name": "Boomi to Azure User Story Review",
					"description": "Reviewing a user story with multiple acceptance criteria to build the azure equivalent functionality of the boomi documentation",
					"prompt": "You are a Product Owner tasked with creating user stories and acceptance criteria for a migration project transitioning\n integrations from Boomi to Azure Integrations.\n Using the provided current state documentation as your primary reference, generate a Markdown document that includes\n one detailed user story and comprehensive acceptance criteria covering all possible scenarios.\n\n## Requirements\n\n### User Story\n\n- **Format:** Use the INVEST principles to ensure the user story is Independent, Negotiable, Valuable, Estimable, Small, and Testable.\n- **Template:** As a [role], I want to [action], so that [value/benefit].\n- **Focus:** Emphasize the desired outcome without delving into implementation details.\n\n### Acceptance Criteria\n\n- **Format:** Utilize Gherkin syntax for clarity. Given [context], When [action], Then [result].\n- **Details:** Ensure criteria cover functional requirements (what the system should do).\nInclude non-functional requirements (e.g., performance, security, scalability).\nSpecify measurable outcomes where possible (e.g., timeframes, data size limits, specific mapping).\nInclude error handling and edge cases (e.g., invalid input, system failures).\nEnsure all criteria are testable and verifiable.\n- **Specific & Measurable:** Clearly define expected outcomes and conditions.\n- **Comprehensive Scenarios:** Include all relevant scenarios, including edge cases and error conditions.\n- **Modular:** Provide acceptance criteria for each sub process. Prefer new acceptance criteria over using \"AND\" syntax\".\n- **Concise:** Provide detailed yet straightforward criteria to ensure clarity and ease of understanding for Testers, Business Analysts, and Developers.\n\n## Additional Guidelines\n\n- **Content Scope:** Focus solely on the functionality of the integration as described in the documentation. Do not introduce any assumptions or additional information.\n- **Documentation Structure:** The provided content includes documentation for each process and subprocess. Ensure that the generated user story and acceptance criteria accurately reflect these details.\n\n## Provided Documentation\n\n{{content::file}}\n\n## User Story\n\n{{user_story::file}}",
					"input": [
						{
							"name": "content",
							"description": "Input file",
							"type": "input",
							"value": "/",
							"required": true
						},
						{
							"name": "user_story",
							"description": "Input for user_story",
							"required": true,
							"type": "string",
							"value": "/"
						}
					],
					"outputFolder": "/",
					"outputFileName": "review_output.md",
					"temperature": 0.7,
					"processFormat": "eachFile"
				}
			],
			"Identify Integrations": [
				{
					"id": "356e20e6-d135-41d6-aa9c-0ff44342dc42",
					"name": "Identify Integrations",
					"description": "Using the detailed notes from a workshop analyse and identify necessary integrations.",
					"prompt": "Prompt: Integration Identification from Workshop Notes\nYou are tasked with analysing detailed notes from workshops regarding system integrations. Your job is to extract and identify key integrations based on the provided notes. \nFor each integration, provide the following details for a markdown file in table format:\n\nName: A short and descriptive name for the integration.\nSource System(s): List the system(s) providing the data for the integration.\nDestination System(s): List the system(s) receiving the data for the integration.\nType of Integration: Specify the integration type (e.g., API, Batch API, File Transfer, Event Streaming, etc.).\nFrequency: Describe how often the integration is performed (e.g., real-time, batch, daily, weekly).\nDescription: A brief explanation of the purpose of the integration and any relevant details.\nWorkshop Name(s): List all workshops where this integration was discussed.\nEnsure that each integration entry is clear, precise, and captures all relevant information, including dependencies, constraints, and any additional context provided in the notes. Below is an example format:\nDo not return ```markdown``` or anything outside of the table.\nUse the exact names of files for the workshop name(s).\n\nTable format:\n| Name        | Source System(s)      | Destination System(s) | Type of Integration | Frequency | Description | Workshop Name(s) |\n|-------------|-----------------------|-----------------------|---------------------|-----------|-------------|------------------| \n| Value 1     | Value 2               |  Value 3              |  Value 4            | Value 5   | Value 6     | Value 7          |\n\nIntegration Identification Example:\n| Name        | Source System(s)      | Destination System(s) | Type of Integration | Frequency | Description | Workshop Name(s) |\n|-------------|-----------------------|-----------------------|---------------------|-----------|-------------|------------------| \n|Customer Master Synchronization | Dynamics 365 | Sale Gate |  Near Real-time API | On-demand or when updates occur | Synchronizes customer master data from Dynamics 365 to Sale Gate. Includes customer groups, credit limits, and stop credit flags. Sale Gate has read-only access to the data. | Customer Data Alignment Workshop, Master Data Governance Workshop |\n| Sales Order Processing | Sailgate | Dynamics 365 | Batch API | Per finalized sale batch | Transfers finalized sales orders from Sailgate to Dynamics 365. Includes livestock details, charges, and commissions. Handles adjustments and reversals with full audit trail.| Sales Operations Workshop, Data Transfer Standards Workshop |\n\n{{content::file}}",
					"input": [
						{
							"name": "content",
							"description": "Input file",
							"type": "input",
							"value": "/",
							"required": true
						}
					],
					"outputFolder": "/",
					"outputFileName": "integrations_output.md",
					"temperature": 0.7,
					"processFormat": "eachFile"
				}
			],
			"Logic App Generation": [
				{
					"id": "20c83e5a-ea77-4f15-af75-866dc1724dd8",
					"name": "Logic App Generation",
					"description": "Generate the code required by an Azure Logic App",
					"prompt": "You are an expert Azure Developer. Your task is to create an azure logic app\n\n### Task Requirements:\n- Do the following steps and provide the output -\n  - Analyze the Detailed Design Document.\n  - Extract all necessary information such as actions, dependencies, and business logic requirements.\n  - Determine the flow first and then find out the step by step process and then convert each step into actions or operations of logic app workflow\n  - Generate the code for all the component required for running the Logic App standard workflow based on the detailed design document and below mentioned Build Guidelines, but do not include it in the output yet. \n  - Validate if the actions are present service provider connectors list, they have type = \"ServiceProvider\" instead of \"ApiConnection\" in workflow.json. Make necessary correction as required.\n  - Validate the schema of generated output against the schemas mentioned further below in this prompt.  \n  - Correct any mistakes based on this schema validation and display only the final output of the code components in the output.\n\n\n### Build Guidelines:\n1. **Code Components**: Generate all the files required for a Logic App standard workflow such as \n    - workflow.json\n    - connections.json    \n    - parameters.json\n    - host.json\n2. **Use of parameters**: Use parameters wherever possible. write placeholder inside < > angle brackets, where the data is not available in the input.\n3. **Exception handling**: \n    - Utilize standard HTTP error codes unless custom codes are required. Return meaningful HTTP status for errors. \n    - Must put the critical operations or actions under a scope named \"Try_Scope\"\n    - Must put the actions required to handle the exception from \"Try_Scope\" inside the scope called \"Catch_Scope\" in the workflow.\n    - If No exception handling mechanism is mentioned in the detailed design, use compose task to capture a custom error message.\n4. **Use of placeholders**: use placeholders as <placeholder name> when actual data is not available, so that developers can replace the placeholder later.\n5. **Naming conventions**: Ensure Consistency: Maintain consistent naming conventions and namespace structures in naming the parameters, action names, connection names.\n6. **Actions**: Identify the required actions to Incorporate Business Logic. If Service Provider type actions are used, it must include \"serviceProviderConfiguration\" in the input section.\n7. **Connectors**: \n    - Must prefer built in connectors than the managed connectors unless there are limitations on built in connectors.\n    - These are some of the built in connectors for azure logic app standard\n        AS2 (v2)\n        Azure Functions\n        Batch Operations\n        Control\n        Data Mapper Operations\n        Data Operations\n        Date Time\n        EDIFACT\n        Flat File\n        HTTP\n        Inline Code\n        Integration Account\n        Liquid Operations\n        Request\n        RosettaNet\n        Schedule\n        SWIFT\n        Variables\n        Workflow Operations\n        X12\n        XML Operations\n    - These are the rest of the built-in connectors, which are based on the service provider model. \n        Azure AI Search\n        Azure Automation\n        Azure Blob Storage\n        Azure Cosmos DB\n        Azure Event Grid Publisher\n        Azure Event Hubs\n        Azure File Storage        \n        Azure Key Vault\n        Azure OpenAI\n        Azure Queue Storage\n        Azure Service Bus\n        Azure Table Storage\n        File System        \n        FTP\n        IBM 3270\n        IBM CICS\n        IBM DB2\n        IBM Host File\n        IBM IMS\n        IBM MQ\n        JDBC\n        SAP        \n        SFTP\n        SMTP\n        SQL Server \n      - The above connectors must have type = \"ServiceProvider\" and \"serviceProviderConnections\" will contain the connection information such as \"connectionName\",\"operationId\",\"serviceProviderId\" in workflow.json.\n      - The above connectors must be under \"serviceProviderConnections\" in connections.json.\n    - You can refer the below content for some common connectors and their operationIds, inputs , outputs , parameters. The Description column will give you the idea which operation you can use.\n        - Azure Blob Storage (https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/azureblob/)\n\n          | Operation ID              | Description                                                               | Parameters                                                                                                                                                                                    | Returns                                                                                                                                                                                                                                                                               |\n          |---------------------------|---------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n          | blobExists                | Check whether a blob exists in an Azure storage container.                | - containerName (True, string)<br>- blobName (True, string)                                                                                                                                   | - isBlobExists (string)<br>- properties (string)<br>- metadata (string)                                                                                                                                                                                                               |\n          | copyBlob                  | Copy blob from source location to destination.                            | - sourceContainerName (True, string)<br>- sourceBlobName (True, string)<br>- destinationContainerName (True, string)<br>- destinationBlobName (True, string)<br>- overrideIfExists (string)   | - name (string)<br>- creationTime (string)<br>- blobType (string)<br>- blobFullPathWithContainer (string)<br>- contentDisposition (string)<br>- contentMD5 (string)<br>- contentType (string)<br>- contentLanguage (string)<br>- eTag (string)                                        |\n          | deleteBlob                | Delete a blob from an Azure storage container.                            | - containerName (True, string)<br>- blobName (True, string)                                                                                                                                   | - statusCode (integer)                                                                                                                                                                                                                                                                |\n          | getBlobMetadata           | Get blob metadata using a path to an Azure storage container.             | - containerName (True, string)<br>- blobName (True, string)                                                                                                                                   | - name (string)<br>- creationTime (string)<br>- blobType (string)<br>- blobFullPathWithContainer (string)<br>- contentDisposition (string)<br>- contentMD5 (string)<br>- contentType (string)<br>- contentLanguage (string)<br>- eTag (string)                                        |\n          | getContainerMetadata      | Get container metadata using a path to an Azure storage container.        | - containerName (True, string)                                                                                                                                                            | - name (string)<br>- eTag (string)<br>- lastModifiedTime (string)                                                                                                                                                                                                         |\n          | listContainers            | List all containers in Azure storage account.                             | - pageMarker (string)                                                                                                                                                                     | - containers (string)<br>- pageMarker (string)                                                                                                                                                                                                                                |\n          | listBlobDirectories       | List all the blob directories in the given path of Azure blob storage.    | - containerName (True, string)<br>- blobNamePrefix (string)                                                                                                                           | - blobDirectories (string)                                                                                                                                                                                                                                                        |\n          | listBlobs                 | List all the blobs using a path to an Azure storage container.            | - containerName (True, string)<br>- blobNamePrefix (string)<br>- pageMarker (string)<br>- excludeSubFolderBlobs (string)                                                      | - blobs (string)<br>- pageMarker (string)                                                                                                                                                                                                                                     |\n          | readBlob                  | Read content from a blob in an Azure storage container.                   | - containerName (True, string)<br>- blobName (True, string)<br>- inferContentType (string)                                                                                        | - content (string)<br>- properties (string)<br>- metadata (string)                                                                                                                                                                                                        |\n          | uploadBlob                | Upload a blob to an Azure storage container.                              | - containerName (True, string)<br>- blobName (True, string)<br>- content (True, string)<br>- overrideIfExists (string)                                                        | - properties (string)<br>- metadata (string)                                                                                                                                                                                                                                  |\n\n        - ftp - https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/ftp/\n\n          | Operation ID          | Description                                                                                       | Parameters                                                                                                                                                     | Returns                                                                                                   |\n          |-----------------------|-------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------|\n          | createFile            | Creates a file on the FTP server. If the file already exists, the file is overwritten.                | - filePath (True, string)<br>- fileContent (True, string)<br>- getAllFileMetadata (string)                                                              | - name (string)<br>- path (string)<br>- size (string)<br>- lastUpdatedTime (string)<br>- mediaType (string)<br>- isFolder (string) |\n          | deleteFtpFile         | Deletes a file on the FTP server.                                                                     | - filePath (True, string)<br>- skipIfFileNotPresent (string)                                                                                                | - statusCode (integer)                                                                                    |\n          | extractArchive        | Extract an archive file inside the specified folder. Only ZIP archives are supported.                 | - filePath (string)<br>- folderPath (True, string)<br>- overwriteExistingFilesBehaviour (string)<br>- fileContent (string)                          | - Extract Archive output body (array)                                                                 |\n          | getFtpFileContent     | This action fetches full file content given that the file size does not exceed maximum permissible limit of '{0}' bytes. Consider using 'Get File Content V(2)' action if you expect larger files. | - filePath (True, string)                                                                                                                                       | - fileContent (string)                                                                                      |\n          | getFtpFileContentV2   | Gets the content of the given file. The default limit on file size is '2147483648' bytes.             | - filePath (True, string)                                                                                                                                       | - fileContent (string)                                                                                      |\n          | getFileMetadata       | The file metadata.                                                                                     | - filePath (True, string)                                                                                                                                       | - name (string)<br>- path (string)<br>- size (string)<br>- lastUpdatedTime (string)<br>- mediaType (string)<br>- isFolder (string) |\n          | listFilesInFolder     | Lists the files and subfolders in the specified folder.                                               | - folderPath (True, string)                                                                                                                                     | - Folder items (array)                                                                                      |\n          | updateFile            | Updates a file on the FTP server.                                                                     | - filePath (True, string)<br>- fileContent (True, string)<br>- getAllFileMetadata (string)                                                              | - name (string)<br>- path (string)<br>- size (string)<br>- lastUpdatedTime (string)<br>- mediaType (string)<br>- isFolder (string) |\n\n        - sftp - https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/sftp/        \n\n          | Operation ID          | Description                                                                                                                                                                   | Parameters                                                                                                              | Returns                                                                                                                                                                                                                                                                                                              |\n          |-----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n          | copyFile              | Copy a file from the source file path to the destination file path.                                                                                                           | - sourceFilePath (True, string)<br>- destinationFilePath (True, string)<br>- overWriteFileIfExists (string)             | - name (string)<br>- absolutePath (string)<br>- pathRelativeToRootDirectory (string)<br>- fileSize (string)<br>- mediaType (string)<br>- lastAccessTime (string)<br>- lastModifiedTime (string)<br>- isDirectory (string)<br>- readPermission (string)<br>- writePermission (string)<br>- executePermission (string) |\n          | createFolder          | Create a folder using the specified folder path.                                                                                                                              | - folderPath (True, string)                                                                                             | - name (string)<br>- absolutePath (string)<br>- pathRelativeToRootDirectory (string)<br>- fileSize (string)<br>- mediaType (string)<br>- lastAccessTime (string)<br>- lastModifiedTime (string)<br>- isDirectory (string)<br>- readPermission (string)<br>- writePermission (string)<br>- executePermission (string) |\n          | deleteFile            | Delete the file using the specified file path.                                                                                                                                | - filePath (True, string)<br>- skipDelete (string)                                                                      | - fileDeleted (string)                                                                                                                                                                                                                                                                                               |\n          | deleteFolder          | Delete the folder using the specified path. Use optional input 'Recursive delete' to delete a non-empty folder along with all its contents.                                   | - folderPath (True, string)<br>- recursiveDelete (string)                                                               | - statusCode (integer)                                                                                                                                                                                                                                                                                               |\n          | extractArchive        | Extract an archive file inside the specified folder. Only ZIP archives are supported.                                                                                         | - filePath (string)<br>- folderPath (True, string)<br>- overwriteExistingFilesBehaviour (string)<br>- content (string)  | - Extract Archive output body (array)                                                                                                                                                                                                                                                                                |\n          | getFileContent        | Get the full file content, provided that the file size doesn't exceed the limit of '209715200' bytes. For larger files, use the 'Get file content (V2)' action. | - filePath (True, string)<br>- inferContentType (string)                                                                              | - fileName (string)<br>- content (string)                                                                                                                                                                                                                                                                            |\n          | getFileContentV2      | Get the content from the specified file. By default, the file size limit is '2147483648' bytes.                                                                               | - filePath (True, string)<br>- inferContentType (string)                                                                | - Output body from the 'Get file content (V2)' action (string)                                                                                                                                                                                                                                                       |\n          | getMetadata           | Get the metadata for a file or a directory in the specified path.                                                                                                             | - fileOrFolderPath (True, string)                                                                                       | - name (string)<br>- absolutePath (string)<br>- pathRelativeToRootDirectory (string)<br>- fileSize (string)<br>- mediaType (string)<br>- lastAccessTime (string)<br>- lastModifiedTime (string)<br>- isDirectory (string)<br>- readPermission (string)<br>- writePermission (string)<br>- executePermission (string) |\n          | listFolder            | List the files and folders present in the given folder with their metadata. To exclude subfolders in the action output, use the optional input parameter 'List files only'.   | - folderPath (True, string)<br>- filesOnly (string)                                                                     | - List folder output body (array)                                                                                                                                                                                                                                                                                    |\n          | renameFile            | Change the name of the specified file. The renamed file stays in the same directory.                                                                                          | - filePath (True, string)<br>- newFileName (True, string)<br>- fetchMetadata (string)                                   | - name (string)<br>- absolutePath (string)<br>- pathRelativeToRootDirectory (string)<br>- fileSize (string)<br>- mediaType (string)<br>- lastAccessTime (string)<br>- lastModifiedTime (string)<br>- isDirectory (string)<br>- readPermission (string)<br>- writePermission (string)<br>- executePermission (string) |\n          | uploadFileContent     | Upload the specified content to a file in the specified file path. To create an empty file, ignore the optional input parameter named 'File content'.                         | - filePath (True, string)<br>- content (string)<br>- overWriteFileIfExists (True, string)                               | - filePath (string)<br>- size (string)<br>- filename (string)<br>- pathRelativeToRootDirectory (string)                                                                                                                                                                                                              |\n\n        - Azure File Storage - https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/azurefile/ \n\n          | Operation ID          | Description                                                                                            | Parameters                                                                                                                                          | Returns                                                                                                                                                                           |\n          |-----------------------|--------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n          | copyFile              | Copies a file from your Azure file share in your Azure storage account.                                | - SourceFilePath (True, string)<br>- destinationFilePath (True, string)<br>- overwrite (string)                                                     | - name (string)<br>- path (string)<br>- etag (string)<br>- contentType (string)<br>- isFolder (string)<br>- lastModifiedDateTime (string)<br>- id (string)<br>- fileSize (string) |\n          | createFile            | Creates a file in your Azure file share.                                                               | - folderPath (True, string)<br>- fileName (True, string)<br>- fileContent (True, string)<br>- overwrite (string)                                    | - name (string)<br>- path (string)<br>- etag (string)<br>- contentType (string)<br>- isFolder (string)<br>- lastModifiedDateTime (string)<br>- id (string)<br>- fileSize (string) |\n          | deleteFile            | Deletes a file from your Azure file share.                                                             | - fileId (True, string)                                                                                                                             | - statusCode (integer)                                                                                                                                                            |\n          | getFileContent        | Gets a file's content by specifying only the file path, not an ID.                                     | - fileId (True, string)<br>- inferContentType (string)                                                                                              | - fileContent (string)                                                                                                                                                            |\n          | getFileContentV2      | Gets the content of the given file. The default limit on file size is '2147483648' bytes.              | - fileId (True, string)<br>- inferContentType (string)                                                                                              | - fileContent (string)                                                                                                                                                            |\n          | getFileContentByPath  | Gets a file's content by specifying a path.                                                            | - fileId (True, string)<br>- inferContentType (string)                                                                                              | - fileContent (string)                                                                                                                                                            |\n          | getFileMetadata       | Gets a file's metadata by specifying only the file path, not an ID.                                    | - fileId (True, string)                                                                                                                             | - name (string)<br>- path (string)<br>- etag (string)<br>- contentType (string)<br>- isFolder (string)<br>- lastModifiedDateTime (string)<br>- id (string)<br>- fileSize (string) |\n          | getFileMetadataByPath | Gets a file's metadata by specifying a path.                                                           | - filePath (True, string)                                                                                                                           | - name (string)<br>- path (string)<br>- etag (string)<br>- contentType (string)<br>- isFolder (string)<br>- lastModifiedDateTime (string)<br>- id (string)<br>- fileSize (string) |\n          | listFolder            | Lists the files in a folder.                                                                           | - folderId (True, string)                                                                                                                           | - Output (array)                                                                                                                                                                  |\n          | updateFile            | Updates a file in your Azure file share.                                                               | - fileId (True, string)<br>- fileContent (True, string)                                                                                             | - name (string)<br>- path (string)<br>- etag (string)<br>- contentType (string)<br>- isFolder (string)<br>- lastModifiedDateTime (string)<br>- id (string)<br>- fileSize (string) |\n\n        - Azure Service Bus - (https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/servicebus)\n\n          | Operation ID               | Description                                                              | Parameters                                                                                                                     | Returns                  |\n          |----------------------------|--------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------|--------------------------|\n          | abandonQueueMessageV2      | Abandon the message in a queue.                                          | - queueName (True, string)<br>- lockToken (True, string)                                                                       | - status (string)        |\n          | abandonMessageInSession    | Abandon the message in a session enabled queue or topic subscription.    | - messageId (True, string)                                                                                                     | - status (string)        |\n          | abandonTopicMessageV2      | Abandon the message in a topic subscription.                             | - topicName (True, string)<br>- subscriptionName (True, string)<br>- lockToken (True, string)                                  | - status (string)        |\n          | completeQueueMessageV2     | Complete the message in a queue.                                         | - queueName (True, string)<br>- lockToken (True, string)                                                                       | - status (string)        |\n          | completeMessageInSession   | Complete the message in a session enabled queue or topic subscription.   | - messageId (True, string)                                                                                                     | - status (string)        |\n          | completeTopicMessageV2     | Complete the message in a topic subscription.                            | - topicName (True, string)<br>- subscriptionName (True, string)<br>- lockToken (True, string)                                  | - status (string)        |\n          | deadLetterQueueMessage     | Dead-letter the message in a queue.                                      | - queueName (True, string)<br>- lockToken (True, string)                                                                       | - status (string)        |\n          | deadLetterMessageInSession | Dead-letter the message in a session enabled queue or topic subscription.| - messageId (True, string)                                                                                                     | - status (string)        |\n          | deadLetterTopicMessage     | Dead-letter the message in a topic subscription.                         | - topicName (True, string)<br>- subscriptionName (True, string)<br>- lockToken (True, string)                                  | - status (string)        |\n          | getQueueMessages           | The operation gets messages from a queue.                                | - queueName (True, string)<br>- maxMessageCount (True, int)                                                                    | - messages (array)       |\n          | getQueueSessionMessages    | The operation gets messages from a queue session.                        | - queueName (True, string)<br>- sessionId (True, string)<br>- maxMessageCount (True, int)                                      | - messages (array)       |\n          | getTopicMessages           | The operation gets messages from a topic subscription.                   | - topicName (True, string)<br>- subscriptionName (True, string)<br>- maxMessageCount (True, int)                               | - messages (array)       |\n          | getTopicSessionMessages    | The operation gets messages from a topic subscription in a session.      | - topicName (True, string)<br>- subscriptionName (True, string)<br>- sessionId (True, string)<br>- maxMessageCount (True, int) | - messages (array)       |\n          | sendQueueMessage           | Send message to a queue or topic.                                        | - queueOrTopicName (True, string)<br>- messageBody (True, string)<br>- properties (object)                                     | - status (string)        |\n          | sendMultipleQueueMessages  | This operation sends messages to a queue or topic.                       | - queueOrTopicName (True, string)<br>- messages (array)                                                                        | - status (string)        |\n\n8. **Triggers**: \n      - Prefer other triggers such as FTP triggers, Blob triggers over recurrence triggers and http triggers unless mentioned in the detailed design document.\n      - Examples of triggers -\n9. **Structured output**: \n      - Present the generated code in a clear, organized format, separating each file with headers indicating the <filename>.json\n      - You must write <filename>_FileStart at the beginning of each json file and <filename>_FileEnd\" at the end of each json file.\n10. **Validation Errors**: Make sure there are no validation errors in the logic app.\n11. **Logic App Type**: Must use Logic app standard workflow of stateful kind.\n12. **Schema**:   \n  - definition object of workflow.json must adhere to the below mentioned schema -\n    {\n      \"$id\": \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\",\n      \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n      \"title\": \"Logic App Template Schema\",\n      \"description\": \"The workflow.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"actions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"allOf\": [\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"runAfter\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"Aborted\",\n                          \"Cancelled\",\n                          \"Failed\",\n                          \"Faulted\",\n                          \"Ignored\",\n                          \"Paused\",\n                          \"Running\",\n                          \"Skipped\",\n                          \"Succeeded\",\n                          \"Suspended\",\n                          \"TimedOut\",\n                          \"Waiting\"\n                        ],\n                        \"description\": \"The status of a flow.\"\n                      }\n                    },\n                    \"description\": \"The operation run after.\"\n                  },\n                  \"trackedProperties\": {\n                    \"description\": \"The tracked properties.\"\n                  }\n                }\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"metadata\": {\n                    \"description\": \"The operation metadata.\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"ApiConnection\",\n                      \"ApiConnectionWebhook\",\n                      \"ApiManagement\",\n                      \"AppendToArrayVariable\",\n                      \"AppendToStringVariable\",\n                      \"Batch\",\n                      \"Compose\",\n                      \"DecrementVariable\",\n                      \"Expression\",\n                      \"FlatFileDecoding\",\n                      \"FlatFileEncoding\",\n                      \"Foreach\",\n                      \"Function\",\n                      \"Http\",\n                      \"HttpWebhook\",\n                      \"If\",\n                      \"IncrementVariable\",\n                      \"InitializeVariable\",\n                      \"IntegrationAccountArtifactLookup\",\n                      \"Join\",\n                      \"Liquid\",\n                      \"ParseJson\",\n                      \"Query\",\n                      \"Recurrence\",\n                      \"Request\",\n                      \"Response\",\n                      \"Scope\",\n                      \"Select\",\n                      \"SendToBatch\",\n                      \"SetVariable\",\n                      \"SlidingWindow\",\n                      \"Switch\",\n                      \"Table\",\n                      \"Terminate\",\n                      \"Until\",\n                      \"Wait\",\n                      \"Workflow\",\n                      \"XmlValidation\",\n                      \"Xslt\"\n                    ],\n                    \"description\": \"The type of the flow operation.\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"AddToTime\",\n                      \"Alert\",\n                      \"ApiConnection\",\n                      \"AzureMonitorAlert\",\n                      \"Button\",\n                      \"ConvertTimeZone\",\n                      \"CurrentTime\",\n                      \"EventGrid\",\n                      \"Geofence\",\n                      \"GetFutureTime\",\n                      \"GetPastTime\",\n                      \"Http\",\n                      \"JsonToJson\",\n                      \"JsonToText\",\n                      \"PowerApp\",\n                      \"SecurityCenterAlert\",\n                      \"SubtractFromTime\",\n                      \"XmlToJson\",\n                      \"XmlToText\"\n                    ],\n                    \"description\": \"The kind of the flow operation.\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The operation description.\"\n                  },\n                  \"operationOptions\": {\n                    \"type\": \"string\",\n                    \"description\": \"The operation options.\"\n                  },\n                  \"runtimeConfiguration\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"paginationPolicy\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/1/properties/runtimeConfiguration/definitions/FlowPaginationPolicy\"\n                      },\n                      \"contentTransfer\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/1/properties/runtimeConfiguration/definitions/FlowContentTransferConfiguration\"\n                      },\n                      \"concurrency\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/1/properties/runtimeConfiguration/definitions/FlowConcurrencyConfiguration\"\n                      }\n                    },\n                    \"description\": \"The flow template operation runtime configuration.\",\n                    \"definitions\": {\n                      \"FlowConcurrencyConfiguration\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"repetitions\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The repetitions.\"\n                          },\n                          \"runs\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The runs.\"\n                          },\n                          \"maximumWaitingRuns\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The maximum waiting runs.\"\n                          }\n                        },\n                        \"description\": \"The flow concurrency configuration.\"\n                      },\n                      \"FlowContentTransferConfiguration\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"transferMode\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/1/properties/runtimeConfiguration/definitions/FlowContentTransferMode\"\n                          }\n                        },\n                        \"description\": \"The flow content transfer configuration.\"\n                      },\n                      \"FlowContentTransferMode\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"Chunked\"\n                        ],\n                        \"description\": \"The flow content transfer mode.\"\n                      },\n                      \"FlowPaginationPolicy\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"minimumItemCount\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The minimum item count.\"\n                          }\n                        },\n                        \"description\": \"The flow pagination policy.\"\n                      }\n                    }\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ]\n              },\n              {\n                \"oneOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"ApiConnection\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"host\": {\n                                \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/7/properties/inputs/properties/host\"\n                              },\n                              \"method\": {\n                                \"type\": \"string\",\n                                \"default\": \"POST\",\n                                \"description\": \"The method of the request.\"\n                              },\n                              \"path\": {\n                                \"type\": \"string\",\n                                \"description\": \"The path for the request.\"\n                              },\n                              \"queries\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/properties/queries\"\n                              },\n                              \"body\": {\n                                \"description\": \"The body of the request.\"\n                              },\n                              \"headers\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/21/properties/inputs/properties/headers\"\n                              }\n                            },\n                            \"required\": [\n                              \"host\",\n                              \"path\"\n                            ]\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"operationOptions\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/1/properties/operationOptions\"\n                              },\n                              \"retryPolicy\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"None\",\n                                      \"Fixed\",\n                                      \"Exponential\"\n                                    ],\n                                    \"description\": \"The type of retry policy to use.\"\n                                  },\n                                  \"interval\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"The interval between retries.\"\n                                  },\n                                  \"count\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"The number of times a retry should be attempted.\"\n                                  },\n                                  \"minimumInterval\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"The minimum time delay for the exponential retry.\"\n                                  },\n                                  \"maximumInterval\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"The maximum time delay for the exponential retry.\"\n                                  }\n                                },\n                                \"description\": \"The retry policy.\"\n                              },\n                              \"authentication\": {\n                                \"oneOf\": [\n                                  {\n                                    \"type\": \"string\",\n                                    \"description\": \"A Logic Apps expression.\"\n                                  },\n                                  {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"type\": {\n                                        \"type\": \"string\",\n                                        \"enum\": [\n                                          \"Basic\"\n                                        ],\n                                        \"description\": \"The HTTP authentication type.\"\n                                      },\n                                      \"username\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The username.\"\n                                      },\n                                      \"password\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The password.\"\n                                      }\n                                    },\n                                    \"description\": \"The HTTP basic authentication.\"\n                                  },\n                                  {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"type\": {\n                                        \"type\": \"string\",\n                                        \"enum\": [\n                                          \"ClientCertificate\"\n                                        ],\n                                        \"description\": \"The HTTP authentication type.\"\n                                      },\n                                      \"password\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The password.\"\n                                      },\n                                      \"pfx\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The PFX.\"\n                                      }\n                                    },\n                                    \"description\": \"The HTTP client certificate authentication.\"\n                                  },\n                                  {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"type\": {\n                                        \"type\": \"string\",\n                                        \"enum\": [\n                                          \"None\"\n                                        ],\n                                        \"description\": \"The HTTP authentication type.\"\n                                      }\n                                    },\n                                    \"additionalProperties\": false,\n                                    \"description\": \"No HTTP authentication.\"\n                                  },\n                                  {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"type\": {\n                                        \"type\": \"string\",\n                                        \"enum\": [\n                                          \"ActiveDirectoryOAuth\"\n                                        ],\n                                        \"description\": \"The HTTP authentication type.\"\n                                      },\n                                      \"authority\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The authority.\"\n                                      },\n                                      \"tenant\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The tenant ID.\"\n                                      },\n                                      \"audience\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The audience.\"\n                                      },\n                                      \"clientId\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The client ID.\"\n                                      },\n                                      \"secret\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The secret.\"\n                                      },\n                                      \"pfx\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The PFX.\"\n                                      },\n                                      \"password\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The password used to decrypt the PFX.\"\n                                      }\n                                    },\n                                    \"description\": \"The HTTP OAuth authentication.\"\n                                  },\n                                  {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"type\": {\n                                        \"type\": \"string\",\n                                        \"enum\": [\n                                          \"Raw\"\n                                        ],\n                                        \"description\": \"The HTTP authentication type.\"\n                                      },\n                                      \"scheme\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The raw authentication scheme.\"\n                                      },\n                                      \"parameter\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The raw authentication parameter.\"\n                                      },\n                                      \"value\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The raw authentication value.\"\n                                      }\n                                    },\n                                    \"description\": \"The HTTP raw authentication.\"\n                                  }\n                                ],\n                                \"description\": \"The HTTP authentication.\"\n                              }\n                            },\n                            \"description\": \"The retryable action input.\"\n                          }\n                        ],\n                        \"description\": \"The ApiConnection operation input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"ApiConnectionWebhook\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"schema\": {\n                                \"description\": \"The schema of an API connection webhook operation.\"\n                              },\n                              \"accessKeyType\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"Primary\",\n                                  \"Secondary\"\n                                ],\n                                \"description\": \"The access key type.\"\n                              }\n                            }\n                          }\n                        ],\n                        \"description\": \"The API connection webhook operation input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"ApiManagement\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs/allOf/1\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"api\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/2/properties/inputs/definitions/ApiManagementApiReference\"\n                              },\n                              \"method\": {\n                                \"type\": \"string\",\n                                \"description\": \"The method of the request.\"\n                              },\n                              \"pathTemplate\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/2/properties/inputs/definitions/PathTemplate\"\n                              },\n                              \"queries\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/properties/queries\"\n                              },\n                              \"body\": {\n                                \"description\": \"The body of the request.\"\n                              },\n                              \"subscriptionKey\": {\n                                \"type\": \"string\",\n                                \"description\": \"The subscription key.\"\n                              },\n                              \"headers\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/21/properties/inputs/properties/headers\"\n                              }\n                            },\n                            \"required\": [\n                              \"api\",\n                              \"pathTemplate\"\n                            ]\n                          }\n                        ],\n                        \"description\": \"The API Management operation input.\",\n                        \"definitions\": {\n                          \"ApiManagementApiReference\": {\n                            \"allOf\": [\n                              {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/definitions/FunctionReference/allOf/0\"\n                              }\n                            ],\n                            \"description\": \"The API Management API reference.\"\n                          },\n                          \"PathTemplate\": {\n                            \"description\": \"The path template for the request.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"SendToBatch\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs/allOf/1\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"host\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"workflow\": {\n                                    \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/3/properties/inputs/allOf/1/properties/host/definitions/FlowReference\"\n                                  },\n                                  \"triggerName\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"The trigger name.\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"triggerName\",\n                                  \"workflow\"\n                                ],\n                                \"description\": \"The workflow host.\",\n                                \"definitions\": {\n                                  \"FlowReference\": {\n                                    \"allOf\": [\n                                      {\n                                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/definitions/FunctionReference/allOf/0\"\n                                      },\n                                      {\n                                        \"required\": [\n                                          \"id\"\n                                        ]\n                                      }\n                                    ],\n                                    \"description\": \"The flow reference.\"\n                                  }\n                                }\n                              },\n                              \"batchName\": {\n                                \"type\": \"string\",\n                                \"description\": \"The batch name.\"\n                              },\n                              \"partitionName\": {\n                                \"type\": \"string\",\n                                \"description\": \"The partition name.\"\n                              },\n                              \"messageId\": {\n                                \"type\": \"string\",\n                                \"description\": \"The message identifier.\"\n                              },\n                              \"content\": {\n                                \"description\": \"The content.\"\n                              }\n                            },\n                            \"required\": [\n                              \"host\",\n                              \"batchName\",\n                              \"content\"\n                            ]\n                          }\n                        ],\n                        \"description\": \"The Send to Batch action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Compose\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"description\": \"The Compose action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Expression\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"AddToTime\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"baseTime\": {\n                            \"type\": \"string\",\n                            \"description\": \"The base time.\"\n                          },\n                          \"interval\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The interval of time.\"\n                          },\n                          \"timeUnit\": {\n                            \"type\": \"string\",\n                            \"description\": \"The unit of time specified.\"\n                          }\n                        },\n                        \"required\": [\n                          \"baseTime\",\n                          \"interval\",\n                          \"timeUnit\"\n                        ],\n                        \"description\": \"The inputs for the add to time or subtract from time operation kinds.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Expression\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"ConvertTimeZone\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"baseTime\": {\n                            \"type\": \"string\",\n                            \"description\": \"The base time.\"\n                          },\n                          \"sourceTimeZone\": {\n                            \"type\": \"string\",\n                            \"description\": \"The time zone to convert from.\"\n                          },\n                          \"destinationTimeZone\": {\n                            \"type\": \"string\",\n                            \"description\": \"The time zone to convert to.\"\n                          },\n                          \"formatString\": {\n                            \"type\": \"string\",\n                            \"description\": \"The date time format string.\"\n                          }\n                        },\n                        \"required\": [\n                          \"baseTime\",\n                          \"sourceTimeZone\",\n                          \"destinationTimeZone\"\n                        ],\n                        \"description\": \"The convert time zone operation kind input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Expression\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"CurrentTime\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": false\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Expression\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"GetFutureTime\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"interval\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The interval of time.\"\n                          },\n                          \"timeUnit\": {\n                            \"type\": \"string\",\n                            \"description\": \"The unit of time specified.\"\n                          }\n                        },\n                        \"required\": [\n                          \"interval\",\n                          \"timeUnit\"\n                        ],\n                        \"description\": \"The inputs for the get future time and get past time operation kinds.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Expression\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"GetPastTime\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/8/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Expression\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"SubtractFromTime\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/5/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"FlatFileDecoding\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs/allOf/1\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"content\": {\n                                \"description\": \"The content.\"\n                              },\n                              \"integrationAccount\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"name\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"The name.\"\n                                      }\n                                    },\n                                    \"required\": [\n                                      \"name\"\n                                    ],\n                                    \"description\": \"The artifact information.\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"schema\"\n                                ],\n                                \"description\": \"The integration account schema information.\"\n                              }\n                            },\n                            \"required\": [\n                              \"content\",\n                              \"integrationAccount\"\n                            ]\n                          }\n                        ],\n                        \"description\": \"The content and schema action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"FlatFileEncoding\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/11/properties/inputs\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"emptyNodeGenerationMode\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/12/properties/inputs/definitions/EmptyNodeGenerationMode\"\n                              }\n                            }\n                          }\n                        ],\n                        \"description\": \"The flat file encoding action input.\",\n                        \"definitions\": {\n                          \"EmptyNodeGenerationMode\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"ForcedDisabled\",\n                              \"ForcedEnabled\",\n                              \"HonorSchemaNodeProperty\"\n                            ],\n                            \"description\": \"The empty node generation mode.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Function\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"allOf\": [\n                          {\n                            \"properties\": {\n                              \"function\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/definitions/FunctionReference\"\n                              }\n                            }\n                          },\n                          {\n                            \"properties\": {\n                              \"functionApp\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/definitions/FunctionAppReference\"\n                              },\n                              \"uri\": {\n                                \"type\": \"string\",\n                                \"description\": \"The operation URI as defined in the function app Swagger.\"\n                              }\n                            }\n                          }\n                        ],\n                        \"properties\": {\n                          \"method\": {\n                            \"type\": \"string\",\n                            \"description\": \"The method of the request.\"\n                          },\n                          \"queries\": {\n                            \"type\": \"object\",\n                            \"additionalProperties\": {\n                              \"anyOf\": [\n                                {\n                                  \"type\": \"boolean\"\n                                },\n                                {\n                                  \"type\": \"integer\"\n                                },\n                                {\n                                  \"type\": \"null\"\n                                },\n                                {\n                                  \"type\": \"number\"\n                                },\n                                {\n                                  \"type\": \"string\"\n                                }\n                              ]\n                            },\n                            \"description\": \"The queries for the request.\"\n                          },\n                          \"body\": {\n                            \"description\": \"The body of the request.\"\n                          },\n                          \"headers\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/21/properties/inputs/properties/headers\"\n                          }\n                        },\n                        \"description\": \"The function action input.\",\n                        \"definitions\": {\n                          \"FunctionAppReference\": {\n                            \"allOf\": [\n                              {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/definitions/FunctionReference/allOf/0\"\n                              }\n                            ],\n                            \"description\": \"The function app reference.\"\n                          },\n                          \"FunctionReference\": {\n                            \"allOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"The resource reference identifier.\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"The resource reference name.\"\n                                  },\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"The resource reference type.\"\n                                  }\n                                },\n                                \"description\": \"The base resource reference.\"\n                              }\n                            ],\n                            \"description\": \"The function reference.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Http\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/4/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/5\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"IntegrationAccountArtifactLookup\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"artifactType\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/16/properties/inputs/definitions/ArtifactType\"\n                          },\n                          \"artifaceName\": {\n                            \"type\": \"string\",\n                            \"description\": \"The name of the artifact.\"\n                          }\n                        },\n                        \"description\": \"The integration account artifact lookup input.\",\n                        \"definitions\": {\n                          \"ArtifactType\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"Schema\",\n                              \"Map\",\n                              \"Partner\",\n                              \"Agreement\"\n                            ],\n                            \"description\": \"The type of artifact.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Join\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"from\": {\n                            \"type\": [\n                              \"array\",\n                              \"string\"\n                            ],\n                            \"description\": \"The source.\"\n                          },\n                          \"joinWith\": {\n                            \"type\": \"string\",\n                            \"description\": \"The separator.\"\n                          }\n                        },\n                        \"required\": [\n                          \"from\"\n                        ],\n                        \"description\": \"The Join action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Liquid\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"JsonToJson\",\n                          \"JsonToText\",\n                          \"XmlToJson\",\n                          \"XmlToText\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"content\": {\n                            \"description\": \"The content.\"\n                          },\n                          \"integrationAccount\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"map\": {\n                                \"#ref\": \"common/ArtifactInformation.json\"\n                              }\n                            },\n                            \"required\": [\n                              \"map\"\n                            ],\n                            \"description\": \"The integration account map information.\"\n                          },\n                          \"transformedContentSchema\": {\n                            \"$schema\": \"http://json-schema.org/draft-06/schema#\"\n                          }\n                        },\n                        \"required\": [\n                          \"content\",\n                          \"integrationAccount\"\n                        ],\n                        \"description\": \"The liquid action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"ParseJson\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"content\": {\n                            \"description\": \"The content.\"\n                          },\n                          \"schema\": {\n                            \"$schema\": \"http://json-schema.org/draft-06/schema#\"\n                          }\n                        },\n                        \"description\": \"The Parse JSON action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Query\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"from\": {\n                            \"type\": [\n                              \"array\",\n                              \"string\"\n                            ],\n                            \"description\": \"The source.\"\n                          },\n                          \"where\": {\n                            \"type\": \"string\",\n                            \"description\": \"The where condition.\"\n                          }\n                        },\n                        \"required\": [\n                          \"from\"\n                        ],\n                        \"description\": \"The query action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Response\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"statusCode\": {\n                            \"type\": [\n                              \"integer\",\n                              \"string\"\n                            ],\n                            \"description\": \"The status code for the response.\"\n                          },\n                          \"headers\": {\n                            \"oneOf\": [\n                              {\n                                \"type\": \"string\"\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"additionalProperties\": {\n                                  \"anyOf\": [\n                                    {\n                                      \"type\": \"boolean\"\n                                    },\n                                    {\n                                      \"type\": \"integer\"\n                                    },\n                                    {\n                                      \"type\": \"null\"\n                                    },\n                                    {\n                                      \"type\": \"number\"\n                                    },\n                                    {\n                                      \"type\": \"string\"\n                                    }\n                                  ]\n                                }\n                              }\n                            ],\n                            \"description\": \"The headers for the request.\"\n                          },\n                          \"body\": {\n                            \"description\": \"The body of the response.\"\n                          },\n                          \"schema\": {\n                            \"$schema\": \"http://json-schema.org/draft-06/schema#\"\n                          }\n                        },\n                        \"required\": [\n                          \"statusCode\"\n                        ],\n                        \"description\": \"The response action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Foreach\"\n                        ]\n                      },\n                      \"actions\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/properties/default\"\n                      },\n                      \"foreach\": {\n                        \"type\": [\n                          \"array\",\n                          \"string\"\n                        ],\n                        \"description\": \"The For Each expression.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"If\"\n                        ]\n                      },\n                      \"actions\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/properties/default\"\n                      },\n                      \"else\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/23/definitions/IfElseProperty\"\n                      },\n                      \"expression\": {\n                        \"anyOf\": [\n                          {\n                            \"type\": \"string\"\n                          },\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/23/definitions/IfExpressionObjectProperty\"\n                          }\n                        ],\n                        \"description\": \"The If expression.\"\n                      }\n                    },\n                    \"definitions\": {\n                      \"IfElseProperty\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"actions\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/properties/default\"\n                          }\n                        }\n                      },\n                      \"IfExpressionObjectProperty\": {\n                        \"description\": \"The If object expression property.\",\n                        \"$comment\": \"TODO(joechung): Find out what the schema is for If expression objects.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Scope\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"actions\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/properties/default\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Switch\"\n                        ]\n                      },\n                      \"cases\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                          \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/definitions/FlowTemplateActionCaseBranch\"\n                        },\n                        \"description\": \"The Switch action case branches.\"\n                      },\n                      \"default\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"actions\": {\n                            \"type\": \"object\",\n                            \"additionalProperties\": {\n                              \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/properties/default\"\n                            },\n                            \"description\": \"The actions.\"\n                          }\n                        },\n                        \"description\": \"The flow template action branch.\"\n                      },\n                      \"expression\": {\n                        \"type\": [\n                          \"number\",\n                          \"string\"\n                        ],\n                        \"description\": \"The Switch expression.\"\n                      }\n                    },\n                    \"definitions\": {\n                      \"FlowTemplateActionCaseBranch\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"case\": {\n                            \"description\": \"The case.\"\n                          },\n                          \"actions\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/properties/default\"\n                          }\n                        },\n                        \"required\": [\n                          \"case\"\n                        ],\n                        \"description\": \"The flow template action case branch.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Until\"\n                        ]\n                      },\n                      \"actions\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/25/properties/default\"\n                      },\n                      \"expression\": {\n                        \"type\": \"string\",\n                        \"description\": \"The Until expression.\"\n                      },\n                      \"limit\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/26/definitions/UntilLimitProperty\"\n                      }\n                    },\n                    \"definitions\": {\n                      \"UntilLimitProperty\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"count\": {\n                            \"type\": [\n                              \"number\",\n                              \"string\"\n                            ],\n                            \"description\": \"The until count limit.\"\n                          },\n                          \"timeout\": {\n                            \"type\": \"string\",\n                            \"description\": \"The until timeout limit.\"\n                          }\n                        },\n                        \"description\": \"The Until limits.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Select\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"from\": {\n                            \"type\": [\n                              \"array\",\n                              \"string\"\n                            ],\n                            \"description\": \"The select source.\"\n                          },\n                          \"select\": {\n                            \"description\": \"The select transform.\"\n                          }\n                        },\n                        \"required\": [\n                          \"from\",\n                          \"select\"\n                        ],\n                        \"description\": \"The Select action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Table\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"from\": {\n                            \"type\": [\n                              \"array\",\n                              \"string\"\n                            ],\n                            \"description\": \"The source.\"\n                          },\n                          \"format\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/28/properties/inputs/definitions/TableFormat\"\n                          },\n                          \"columns\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/28/properties/inputs/definitions/TableColumn\"\n                            }\n                          }\n                        },\n                        \"required\": [\n                          \"from\"\n                        ],\n                        \"description\": \"The table action input.\",\n                        \"definitions\": {\n                          \"TableColumn\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"header\": {\n                                \"type\": \"string\",\n                                \"description\": \"The header.\"\n                              },\n                              \"value\": {\n                                \"description\": \"The value.\"\n                              }\n                            },\n                            \"description\": \"The table column.\"\n                          },\n                          \"TableFormat\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"CSV\",\n                              \"HTML\"\n                            ],\n                            \"description\": \"The table format.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Terminate\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"runStatus\": {\n                            \"allOf\": [\n                              {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/0/properties/runAfter/additionalProperties/items\"\n                              },\n                              {\n                                \"enum\": [\n                                  \"Cancelled\",\n                                  \"Failed\",\n                                  \"Succeeded\"\n                                ]\n                              }\n                            ]\n                          },\n                          \"runError\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/29/properties/inputs/definitions/TerminateActionRunError\"\n                          }\n                        },\n                        \"description\": \"The Terminate action input.\",\n                        \"definitions\": {\n                          \"TerminateActionRunError\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"code\": {\n                                \"type\": [\n                                  \"number\",\n                                  \"string\"\n                                ],\n                                \"description\": \"The code.\"\n                              },\n                              \"message\": {\n                                \"type\": \"string\",\n                                \"description\": \"The message.\"\n                              }\n                            },\n                            \"description\": \"The run error.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"AppendToArrayVariable\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/33/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"AppendToStringVariable\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/33/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"DecrementVariable\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/33/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"IncrementVariable\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"name\": {\n                            \"type\": \"string\",\n                            \"description\": \"The name.\"\n                          },\n                          \"type\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/33/properties/inputs/definitions/FlowVariableDataType\"\n                          },\n                          \"value\": {\n                            \"description\": \"The variable value.\"\n                          }\n                        },\n                        \"description\": \"The variable action input.\",\n                        \"definitions\": {\n                          \"FlowVariableDataType\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"Array\",\n                              \"Boolean\",\n                              \"Float\",\n                              \"Integer\",\n                              \"Object\",\n                              \"String\"\n                            ],\n                            \"description\": \"The flow variable data type.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"InitializeVariable\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"variables\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/33/properties/inputs\"\n                            },\n                            \"maxItems\": 1,\n                            \"minItems\": 1\n                          }\n                        },\n                        \"description\": \"The Initialize Variable action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"SetVariable\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/33/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Wait\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"interval\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/36/properties/inputs/definitions/TimeInterval\"\n                          },\n                          \"until\": {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/36/properties/inputs/definitions/WaitUntil\"\n                          }\n                        },\n                        \"maxProperties\": 1,\n                        \"description\": \"The Wait action input.\",\n                        \"definitions\": {\n                          \"TimeInterval\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"unit\": {\n                                \"allOf\": [\n                                  {\n                                    \"description\": \"The wait unit.\"\n                                  },\n                                  {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"Second\",\n                                      \"Minute\",\n                                      \"Hour\",\n                                      \"Day\",\n                                      \"Week\",\n                                      \"Month\",\n                                      \"Year\"\n                                    ]\n                                  }\n                                ]\n                              },\n                              \"count\": {\n                                \"type\": \"integer\",\n                                \"description\": \"The wait count.\"\n                              }\n                            },\n                            \"description\": \"The wait interval.\"\n                          },\n                          \"WaitUntil\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"timestamp\": {\n                                \"type\": \"string\",\n                                \"description\": \"The timestamp.\"\n                              }\n                            },\n                            \"description\": \"The Until.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Workflow\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs/allOf/1\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"host\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/3/properties/inputs/allOf/1/properties/host\"\n                              },\n                              \"body\": {\n                                \"description\": \"The body of the request.\"\n                              },\n                              \"headers\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/21/properties/inputs/properties/headers\"\n                              }\n                            },\n                            \"required\": [\n                              \"host\"\n                            ]\n                          }\n                        ],\n                        \"description\": \"The flow action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"XmlValidation\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/11/properties/inputs\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Xslt\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs/allOf/1\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"content\": {\n                                \"description\": \"The content.\"\n                              },\n                              \"parameters\": {\n                                \"type\": \"object\",\n                                \"additionalProperties\": {\n                                  \"type\": \"string\"\n                                },\n                                \"description\": \"The XSLT (Extensible Stylesheet Language Transformations) parameters.\"\n                              },\n                              \"integrationAccount\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/18/properties/inputs/properties/integrationAccount\"\n                              },\n                              \"function\": {\n                                \"allOf\": [\n                                  {\n                                    \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/definitions/FunctionReference/allOf/0\"\n                                  }\n                                ],\n                                \"description\": \"The function reference.\"\n                              },\n                              \"transformOptions\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/39/properties/inputs/definitions/XsltTransformOptions\"\n                              }\n                            },\n                            \"required\": [\n                              \"content\"\n                            ]\n                          }\n                        ],\n                        \"description\": \"The XSLT (Extensible Stylesheet Language Transformations) action input.\",\n                        \"definitions\": {\n                          \"XsltTransformOptions\": {\n                            \"type\": \"string\",\n                            \"description\": \"The XSLT options flag.\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            ],\n            \"description\": \"A flow template action.\",\n            \"definitions\": {\n              \"FlowTemplateActionBranch\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"actions\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                      \"$ref\": \"#/properties/actions/additionalProperties\"\n                    },\n                    \"description\": \"The actions.\"\n                  }\n                },\n                \"description\": \"The flow template action branch.\"\n              },\n              \"FlowTemplateActionCaseBranch\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/properties/actions/additionalProperties/definitions/FlowTemplateActionBranch\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"case\": {\n                        \"description\": \"The case.\"\n                      }\n                    },\n                    \"required\": [\n                      \"case\"\n                    ],\n                    \"description\": \"The flow template action case branch.\"\n                  }\n                ]\n              },\n              \"FlowTemplateActionUntil\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"limit\": {\n                    \"description\": \"The do-until limit.\"\n                  },\n                  \"conditions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"expression\": {\n                          \"type\": \"string\",\n                          \"description\": \"The expression.\"\n                        },\n                        \"dependsOn\": {\n                          \"type\": \"string\",\n                          \"description\": \"The dependency.\"\n                        }\n                      },\n                      \"description\": \"The template action expression condition.\"\n                    },\n                    \"description\": \"The do-until conditions.\"\n                  }\n                },\n                \"description\": \"The do-until policy.\"\n              }\n            }\n          },\n          \"description\": \"The flow run actions.\"\n        },\n        \"metadata\": {\n          \"description\": \"The definition metadata.\"\n        },\n        \"$schema\": {\n          \"enum\": [\n            \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\"\n          ],\n          \"type\": \"string\",\n          \"description\": \"The definition schema.\"\n        },\n        \"contentVersion\": {\n          \"type\": \"string\",\n          \"pattern\": \"(^[0-9]+\\\\.[0-9]+\\\\.[0-9]+\\\\.[0-9]+$)\",\n          \"description\": \"The flow content version. Specify using a 4-digit format, e.g., 1.0.0.0\"\n        },\n        \"parameters\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/properties/outputs/additionalProperties/allOf/0\"\n              },\n              {\n                \"properties\": {\n                  \"defaultValue\": {\n                    \"description\": \"The default parameter value.\"\n                  },\n                  \"allowedValues\": {\n                    \"type\": \"array\",\n                    \"description\": \"The allowed parameter values.\"\n                  }\n                },\n                \"description\": \"The flow input template parameter.\"\n              }\n            ]\n          },\n          \"description\": \"The flow parameters.\"\n        },\n        \"triggers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/properties/actions/additionalProperties/allOf/1\"\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"conditions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/properties/actions/additionalProperties/definitions/FlowTemplateActionUntil/properties/conditions/items\"\n                    },\n                    \"description\": \"The operation conditions.\"\n                  },\n                  \"splitOn\": {\n                    \"type\": \"string\",\n                    \"description\": \"The trigger split on.\"\n                  },\n                  \"splitOnConfiguration\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"correlation\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"clientTrackingId\": {\n                            \"type\": \"string\",\n                            \"description\": \"The client tracking identifier.\"\n                          }\n                        },\n                        \"description\": \"The correlation properties.\"\n                      }\n                    },\n                    \"description\": \"The trigger SplitOn configuration.\"\n                  },\n                  \"correlation\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"clientTrackingId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The client tracking identifier.\"\n                      }\n                    },\n                    \"description\": \"The correlation properties.\"\n                  }\n                }\n              },\n              {\n                \"oneOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"ApiConnection\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs\"\n                      },\n                      \"recurrence\": {\n                        \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/6/properties/recurrence\"\n                      }\n                    }\n                  },\n                  {\n                    \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/1\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"ApiManagement\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/2/properties/inputs\"\n                      },\n                      \"recurrence\": {\n                        \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/6/properties/recurrence\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Batch\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"mode\": {\n                            \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/3/properties/inputs/definitions/BatchActionMode\"\n                          },\n                          \"batchGroupName\": {\n                            \"type\": \"string\",\n                            \"description\": \"The batch group name.\"\n                          },\n                          \"configurations\": {\n                            \"type\": \"object\",\n                            \"additionalProperties\": {\n                              \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/3/properties/inputs/definitions/BatchConfiguration\"\n                            },\n                            \"description\": \"The batch configurations.\"\n                          }\n                        },\n                        \"descripton\": \"The batch action input.\",\n                        \"definitions\": {\n                          \"BatchActionMode\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"Inline\",\n                              \"IntegrationAccount\"\n                            ],\n                            \"description\": \"The batch action mode.\"\n                          },\n                          \"BatchConfiguration\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"releaseCriteria\": {\n                                \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/3/properties/inputs/definitions/BatchReleaseCriteria\"\n                              }\n                            },\n                            \"description\": \"The batch configuration.\"\n                          },\n                          \"BatchReleaseCriteria\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"messageCount\": {\n                                \"type\": \"integer\",\n                                \"description\": \"The message count.\"\n                              },\n                              \"batchSize\": {\n                                \"type\": \"integer\",\n                                \"description\": \"The batch size in bytes.\"\n                              },\n                              \"recurrence\": {\n                                \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/6/properties/recurrence\"\n                              }\n                            },\n                            \"description\": \"The batch release criteria.\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Http\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/0/properties/inputs/allOf/1\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"uri\": {\n                                \"type\": \"string\",\n                                \"description\": \"The URI of the request.\"\n                              },\n                              \"method\": {\n                                \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/7/properties/inputs/properties/method\"\n                              },\n                              \"queries\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/13/properties/inputs/properties/queries\"\n                              },\n                              \"cookie\": {\n                                \"type\": \"string\",\n                                \"description\": \"The cookie for the request.\"\n                              },\n                              \"body\": {\n                                \"description\": \"The body of the request.\"\n                              },\n                              \"headers\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/21/properties/inputs/properties/headers\"\n                              }\n                            },\n                            \"required\": [\n                              \"method\",\n                              \"uri\"\n                            ]\n                          }\n                        ],\n                        \"description\": \"The HTTP action input.\"\n                      },\n                      \"recurrence\": {\n                        \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/6/properties/recurrence\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"HttpWebhook\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/7/properties/inputs\"\n                          },\n                          {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"subscribe\": {\n                                \"anyOf\": [\n                                  {\n                                    \"$comment\": \"It is likely a bug that HTTP webhooks are allowed to put an arbitrary JSON value in the \\\"subscribe\\\" property.\"\n                                  },\n                                  {\n                                    \"type\": \"string\"\n                                  },\n                                  {\n                                    \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/4/properties/inputs\"\n                                  }\n                                ]\n                              },\n                              \"unsubscribe\": {\n                                \"anyOf\": [\n                                  {\n                                    \"$comment\": \"It is likely a bug that HTTP webhooks are allowed to put an arbitrary JSON value in the \\\"unsubscribe\\\" property.\"\n                                  },\n                                  {\n                                    \"type\": \"string\"\n                                  },\n                                  {\n                                    \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/4/properties/inputs\"\n                                  }\n                                ]\n                              },\n                              \"accessKeyType\": {\n                                \"$ref\": \"#/properties/actions/additionalProperties/allOf/2/oneOf/1/properties/inputs/allOf/1/properties/accessKeyType\"\n                              }\n                            },\n                            \"required\": [\n                              \"subscribe\"\n                            ],\n                            \"description\": \"The HTTP webhook operation input.\",\n                            \"$comment\": \"It is likely a bug that HTTP webhooks do not have to specify the \\\"unsubscribe\\\" property.\"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"Recurrence\"\n                        ]\n                      },\n                      \"recurrence\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"frequency\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"Second\",\n                              \"Minute\",\n                              \"Hour\",\n                              \"Day\",\n                              \"Week\",\n                              \"Month\",\n                              \"Year\"\n                            ],\n                            \"description\": \"The flow recurrence frequency.\"\n                          },\n                          \"interval\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The recurrence interval.\"\n                          },\n                          \"count\": {\n                            \"type\": \"integer\",\n                            \"description\": \"The recurrence count.\"\n                          },\n                          \"startTime\": {\n                            \"type\": \"string\",\n                            \"description\": \"The recurrence start time.\"\n                          },\n                          \"endTime\": {\n                            \"type\": \"string\",\n                            \"description\": \"The recurrence end time.\"\n                          },\n                          \"timeZone\": {\n                            \"type\": \"string\",\n                            \"description\": \"The recurrence time zone.\"\n                          },\n                          \"schedule\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"minutes\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": [\n                                    \"integer\",\n                                    \"string\"\n                                  ]\n                                },\n                                \"description\": \"The minutes on which this job should fire.\"\n                              },\n                              \"hours\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": [\n                                    \"integer\",\n                                    \"string\"\n                                  ]\n                                },\n                                \"description\": \"The hours on which this job should fire.\"\n                              },\n                              \"weekDays\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"string\",\n                                  \"enum\": [\n                                    \"Friday\",\n                                    \"Monday\",\n                                    \"Saturday\",\n                                    \"Sunday\",\n                                    \"Thursday\",\n                                    \"Tuesday\",\n                                    \"Wednesday\"\n                                  ],\n                                  \"description\": \"Specifies the day of the week.\"\n                                },\n                                \"description\": \"The days of the week on which this job should fire.\"\n                              },\n                              \"monthDays\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"integer\"\n                                },\n                                \"description\": \"The days of the month on which this job should fire.\"\n                              },\n                              \"monthlyOccurrences\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"dayOfWeek\": {\n                                      \"type\": \"string\",\n                                      \"enum\": [\n                                        \"Friday\",\n                                        \"Monday\",\n                                        \"Saturday\",\n                                        \"Sunday\",\n                                        \"Thursday\",\n                                        \"Tuesday\",\n                                        \"Wednesday\"\n                                      ],\n                                      \"description\": \"Specifies the day of the week.\"\n                                    },\n                                    \"occurrence\": {\n                                      \"type\": \"integer\",\n                                      \"description\": \"Specifies the week count of this occurrence.\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"dayOfWeek\",\n                                    \"occurrence\"\n                                  ],\n                                  \"description\": \"Indicates a day of week and a count of weeks from the beginning or end of the month on which the day occurs.\"\n                                },\n                                \"description\": \"The monthly occurence on which this job should fire.\"\n                              }\n                            },\n                            \"description\": \"The job recurrence schedule.\"\n                          }\n                        },\n                        \"required\": [\n                          \"frequency\",\n                          \"interval\"\n                        ],\n                        \"description\": \"The flow recurrence.\"\n                      }\n                    },\n                    \"required\": [\n                      \"recurrence\"\n                    ]\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"enum\": [\n                          \"Request\"\n                        ]\n                      },\n                      \"kind\": {\n                        \"enum\": [\n                          \"Alert\",\n                          \"AzureMonitorAlert\",\n                          \"Button\",\n                          \"EventGrid\",\n                          \"Geofence\",\n                          \"Http\",\n                          \"PowerApp\",\n                          \"SecurityCenterAlert\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"host\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"api\": {\n                                \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/7/properties/inputs/properties/host/definitions/ApiConnectionProvider\"\n                              }\n                            },\n                            \"description\": \"The host.\",\n                            \"definitions\": {\n                              \"ApiConnectionProvider\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"runtimeUrl\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"uri\"\n                                  }\n                                },\n                                \"description\": \"The API connection provider.\"\n                              }\n                            }\n                          },\n                          \"operationId\": {\n                            \"type\": \"string\",\n                            \"description\": \"The operation identifier.\"\n                          },\n                          \"parameters\": {\n                            \"type\": \"object\",\n                            \"additionalItems\": {\n\n                            },\n                            \"description\": \"The operation parameters.\"\n                          },\n                          \"schema\": {\n                            \"description\": \"The schema of the manual action input.\"\n                          },\n                          \"relativePath\": {\n                            \"type\": \"string\",\n                            \"description\": \"The relative path.\"\n                          },\n                          \"method\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"DELETE\",\n                              \"GET\",\n                              \"HEAD\",\n                              \"OPTIONS\",\n                              \"PATCH\",\n                              \"POST\",\n                              \"PUT\",\n                              \"TRACE\"\n                            ],\n                            \"description\": \"The HTTP method.\"\n                          }\n                        },\n                        \"description\": \"The manual action input.\"\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"SlidingWindow\"\n                        ]\n                      },\n                      \"inputs\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"delay\": {\n                            \"type\": \"string\",\n                            \"description\": \"The delay.\"\n                          }\n                        },\n                        \"description\": \"The sliding window action input.\"\n                      },\n                      \"recurrence\": {\n                        \"$ref\": \"#/properties/triggers/additionalProperties/allOf/2/oneOf/6/properties/recurrence\"\n                      }\n                    }\n                  }\n                ]\n              }\n            ],\n            \"description\": \"A flow template trigger.\"\n          },\n          \"description\": \"The flow triggers.\"\n        },\n        \"outputs\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"allOf\": [\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"Array\",\n                      \"Bool\",\n                      \"Float\",\n                      \"Int\",\n                      \"Object\",\n                      \"SecureObject\",\n                      \"SecureString\",\n                      \"String\"\n                    ],\n                    \"description\": \"The parameter type.\"\n                  },\n                  \"value\": {\n                    \"description\": \"The parameter value.\"\n                  },\n                  \"metadata\": {\n                    \"description\": \"The parameter metadata.\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The parameter description.\"\n                  }\n                },\n                \"description\": \"The flow template parameter.\"\n              },\n              {\n                \"properties\": {\n                  \"error\": {\n                    \"description\": \"The error of the output parameter.\"\n                  }\n                }\n              }\n            ],\n            \"description\": \"The flow output template parameter.\"\n          },\n          \"description\": \"The flow outputs.\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"The definition description.\"\n        }\n      },\n      \"required\": [\n        \"$schema\",\n        \"contentVersion\"\n      ]\n    }\n  - host.json must follow the below schema\n    {\n      \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"version\": {\n          \"type\": \"string\",\n          \"default\": \"2.0\"\n        },\n        \"extensionBundle\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"default\": \"Microsoft.Azure.Functions.ExtensionBundle.Workflows\"\n            },\n            \"version\": {\n              \"type\": \"string\",\n              \"default\": \"[1.*, 2.0.0)\"\n            }\n          },\n          \"required\": [\"id\", \"version\"]\n        }\n      },\n      \"required\": [\"version\", \"extensionBundle\"]\n    }\n  - parameters.json must follow the below schema:\n    {\n      \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"^.*$\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\":[\"String\", \"Array\", \"Object\", \"Int\", \"Float\",\"Bool\"]\n            },\n            \"value\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\"type\", \"value\"]\n        }\n      },\n      \"additionalProperties\": false\n    } \n  - connections.json must follow the below schema:\n    {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"functionConnections\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"azureFunctionOperation\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"authentication\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"name\",\n                    \"type\",\n                    \"value\"\n                  ]\n                },\n                \"displayName\": {\n                  \"type\": \"string\"\n                },\n                \"function\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\"\n                  ]\n                },\n                \"triggerUrl\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"authentication\",\n                \"displayName\",\n                \"function\",\n                \"triggerUrl\"\n              ]\n            }\n          },\n          \"required\": []\n        },\n        \"managedApiConnections\": {\n          \"type\": \"object\"\n        },\n        \"serviceProviderConnections\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"AzureBlob\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"displayName\": {\n                  \"type\": \"string\"\n                },\n                \"parameterSetName\": {\n                  \"type\": \"string\"\n                },\n                \"parameterValues\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"authProvider\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"Type\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"Type\"\n                      ]\n                    },\n                    \"blobStorageEndpoint\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"authProvider\",\n                    \"blobStorageEndpoint\"\n                  ]\n                },\n                \"serviceProvider\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\"\n                  ]\n                }\n              },\n              \"required\": [\n                \"displayName\",\n                \"parameterSetName\",\n                \"parameterValues\",\n                \"serviceProvider\"\n              ]\n            },\n            \"Ftp\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"displayName\": {\n                  \"type\": \"string\"\n                },\n                \"parameterValues\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"disableCertificateValidation\": {\n                      \"type\": \"string\"\n                    },\n                    \"enableBinaryMode\": {\n                      \"type\": \"string\"\n                    },\n                    \"enableSsl\": {\n                      \"type\": \"string\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\"\n                    },\n                    \"serverAddress\": {\n                      \"type\": \"string\"\n                    },\n                    \"username\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"disableCertificateValidation\",\n                    \"enableBinaryMode\",\n                    \"enableSsl\",\n                    \"password\",\n                    \"serverAddress\",\n                    \"username\"\n                  ]\n                },\n                \"serviceProvider\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\"\n                  ]\n                }\n              },\n              \"required\": [\n                \"displayName\",\n                \"parameterValues\",\n                \"serviceProvider\"\n              ]\n            }\n          },\n          \"required\": []\n        }\n      },\n      \"required\": [\n        \"functionConnections\",\n        \"managedApiConnections\",\n        \"serviceProviderConnections\"\n      ]\n    }\n  - workflow.json must follow the below schema:\n    {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"definition\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"$schema\": {\n              \"type\": \"string\",\n              \"default\": \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\"\n            },\n            \"actions\": {\n              \"type\": \"object\"\n            },\n            \"contentVersion\": {\n              \"type\": \"string\"\n            },\n            \"outputs\": {\n              \"type\": \"object\"\n            },\n            \"triggers\": {\n              \"type\": \"object\"\n            }\n          },\n          \"required\": [\n            \"$schema\",\n            \"actions\",\n            \"contentVersion\",\n            \"outputs\",\n            \"triggers\"\n          ]\n        },\n        \"kind\": {\n          \"type\": \"string\",\n          \"enum\":[\"Stateful, Stateless\"]\n        }\n      },\n      \"required\": [\n        \"definition\",\n        \"kind\"\n      ]\n    }\n  - Do not include \"#schema\" object on the root level of the json files.\n------\n{{content::file}}",
					"input": [
						{
							"name": "content",
							"description": "Input file",
							"type": "input",
							"value": "/",
							"required": true
						}
					],
					"outputFolder": "/",
					"outputFileName": "logic_app_output.md",
					"temperature": 0.7,
					"processFormat": "eachFile"
				}
			]
		},
		"Folder 3": {
			"Sub 1": {
				"Function App Generation": [
					{
						"id": "a2ff813d-2f46-4f7e-bcbe-6adec7b57195",
						"name": "Function App Generation",
						"description": "Generate the code required by an Function App",
						"prompt": "\n## Steps\n1. Rename the Deloitte.YourApp.FunctionApp to the correct name\n2. Implement Models need to Function\\Models\n3. Implement the services in to the Deloitte.Common.Library\\Services\n4. Implement Datamappers to Function\\Mappers\n5. Implement Function\\Handlers\\Handler.cs - ProcessAsync\n6. Review all code against the design.\n7. Implement the tests in Deloitte.YourApp.FunctionApp.Tests for any relevant logic implemented - such as mappings.\n\n## General\n- Leverage functions from the Deloitte.Common.Library\n- Use the coding practices from 'function-coding-conventions.md'\n- Do not leave 'TODO's in the code, implement everything\n- The existing code includes examples - such as 'DestinationDto' - which should be renamed or deleted.\n- Always add required files to the chat\n\n## Structure\nDeloitte.Common.Library\\Services - Generic adaptors for talking to various systems.\n\n# Detailed Design Document\n{{content::file}}",
						"input": [
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							}
						],
						"outputFolder": "/",
						"outputFileName": "function_app_output.md",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				],
				"Generate doap": [
					{
						"id": "1d95e616-f4eb-43af-84ba-5599ff57dc6c",
						"name": "Generate doap",
						"description": "Generating doap ",
						"prompt": "# Comprehensive Documentation Generation Prompt\n\nYou are tasked with creating a **comprehensive, detailed, and developer-ready technical documentation** for an integration process based on the provided content. This documentation will serve as a guide for developers implementing the integration in a different programming language. It is critical that **all technical, procedural, and operational details** are included.\n\n## Requirements\n\n### 1. Inclusion of All Details\n- Include every **technical detail** from the provided content, such as:\n  - Database names and table structures.\n  - SQL queries, including query logic and specific parameters.\n  - API paths and their roles in the process (even if marked \"not applicable\").\n  - File names, paths, and storage locations.\n  - Dynamic SQL scripts, dynamic process properties, and how they are used in decision-making.\n- Ensure all **branching logic and subprocess interactions** are described in-depth, including:\n  - Conditional checks.\n  - Routing logic.\n  - Actions based on success or failure of subprocesses.\n\n### 2. Detailed Technical Processes\n- For each subprocess, provide **step-by-step technical details**, including:\n  - Data extraction logic, file handling processes, and transformation rules.\n  - Error handling mechanisms, such as try-catch blocks and fallback procedures.\n  - File name conventions, directory structures, and naming patterns.\n- Include pseudocode or structured logic where applicable to represent complex processes.\n\n### 3. Logical Structure\nOrganise the content into the following sections:\n1. **Business Outcomes**: High-level benefits and objectives of the integration.\n2. **Requirements**: Functional and non-functional requirements, dependencies, and prerequisites.\n3. **Process Overview**: High-level description of the overall process.\n4. **Detailed Process Logic**: Comprehensive breakdown of the process, including subprocesses and decision points.\n5. **Technical Details**: Complete description of database names, SQL queries, dynamic properties, API paths, file handling, and security measures.\n6. **Mappings**: Detailed field-to-field mappings for data transformations.\n7. **Error Handling**: Mechanisms and fallback strategies.\n8. **Change Log**: Record of updates or validations.\n\n### 4. Developer-Focused Language\n- Use precise, actionable language suitable for developers.\n- Include **SQL queries, file paths, and naming conventions** as they appear in the original content.\n- Provide clear descriptions of how dynamic properties and routing decisions are implemented.\n\n### 5. Avoid Duplication While Maintaining Clarity\n- Consolidate duplicate information but retain necessary context for technical understanding.\n- Group related concepts (e.g., security measures, error handling) while preserving their specific details.\n\n### 6. Consistency\n- Maintain a consistent style, formatting, and terminology throughout.\n- Use Australian English conventions.\n\n---\n\n## Content Provided\n*Content starts here:*\n\n{{content::file}}\n\n*Content ends here.*\n\n---\n\n## Expected Output\n\nA **single, unified, and exhaustive technical documentation** that includes:\n1. **Database Names and SQL Queries**: Explicitly document all databases, tables, and SQL scripts used, along with their purposes and parameters.\n2. **File Names and Paths**: Include exact file names, storage locations, and naming patterns for files involved in the integration.\n3. **API and System Interactions**: Describe all API paths (even if marked as \"not applicable\"), how systems interact, and what data flows between them.\n4. **Error Handling**: Thoroughly document all error-handling mechanisms, including try-catch blocks and fallback logic.\n5. **Dynamic Properties and Conditional Logic**: Explain how dynamic properties are set, updated, and used to drive decisions in the process.\n6. **Comprehensive Mappings**: Provide field-to-field mapping tables for all data transformations, including source, destination, conversion logic, and types.\n7. **Branching and Routing Logic**: Describe in detail how the process branches into subprocesses, the conditions for each path, and the outcomes.\n8. **Security Measures**: Include any security protocols, compliance standards, and handling of sensitive data.\n\nThe output should be **developer-ready**, with enough technical depth to allow a team to implement the integration without referring back to the original documents.",
						"input": [
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							}
						],
						"outputFolder": "/",
						"outputFileName": "doap_output.md",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				],
				"Generate Test Cases": [
					{
						"id": "3d8b46cf-e7cc-4858-be44-e28af3f1fd33",
						"name": "Generate Test Cases",
						"description": "Generate a set of integration test cases in csv format",
						"prompt": "Create a comprehensive set of integration test cases to validate the data transformation and loading processes for a system that extracts, processes, and stores data across multiple databases. The test cases should address all functional, negative, performance, and security scenarios to ensure data is accurately processed, handled securely, and meets performance benchmarks.\n \nThe test cases should be based on the provided detailed design document, which outlines the system's workflow, data mapping, access controls, error handling mechanisms, and business logic and other system attributes. Make sure each of the components/services included are tested via test cases. Include any file names, name of services etc. to aid the test cases.\n\nEnsure each test case includes a unique identifier, a descriptive name, clear test steps, expected results, and identifies whether it is a candidate for automation.\n \nFocus on scenarios such as:\n    - Successful processing and loading of data.\n    - Detection and handling of errors (e.g., missing or duplicate data).\n    - Validation of data integrity in destination systems.\n    - Performance and scalability under various conditions.\n    - Verification of data security, including access controls and encryption.\n    - The test cases should be thorough and aligned with best practices to ensure comprehensive coverage of the system\u00e2\u20ac\u2122s requirements and workflows.\n\nInclude any other scenarios that may seem fit.\n\nGenerate the response only in CSV format, strictly ensure no comment or explanation are included. Do not wrap the response in any code block.\n\n#### Requirements of the table generated should have the following columns:\n        - Test Case ID (Must be an integer)\n        - Test Case Name: One sentence clearly describing the test (wrap with double quotes)\n            - Clear, concise one-sentence description\n            - Include primary objective and context\n        - Test Priority: Assign a priority level (High/Medium/Low) based on business impact and criticality\n        - Test Steps: \n            - Detailed and numbered step by step to execute the test.\n            - Include any specifics, if possible, such as file name, services etc. to help in testing those components individually.\n            For example - Retrieve file 'ASX_Final_Snapshot_2023.csv' from Azure Blob Storage\n            - CRITICAL FORMATTING REQUIREMENT: \n                * Each step MUST be on a new line\n                * Ensure readability and clear separation of individual steps\n\t    - Expected Results: \n            - MUST have corresponding numbered results for each test step\n            - CRITICAL FORMATTING REQUIREMENT:\n                * Each expected result MUST be on a new line\n                * Ensure direct alignment with corresponding test steps\n        - Automation Candidate: \n            - Specify \"Yes\" or \"No\" \n        - Automation Type:  \n            - If \"Yes\", provide SPECIFIC automation type and also provide brief explanation of why it is or is not a good candidate for automation in the format -> Type (Reason):\n                * UI Automation\n                * API Testing\n                * Performance/Load Testing\n                * Integration Testing\n                * End-to-End (E2E) Testing\n                * Batch/Scheduled Testing\n                * Regression Testing\n            - If it's not an automation candidate, then return N/A\n        - Test Type: \n            - Comprehensive classification:\n                - Functional\n                - Negative\n                - Performance\n                - Security\n                - Compliance\n                - Integration\n                - Exploratory\n            - Explain why this specific classification was chosen\n        - Potential Risks: Identify potential risks associated with the test case\n        \n        - Delivery Format:\n            - Generate output strictly in CSV format\n            - No additional comments or explanations\n            - Ensure all columns are populated with meaningful content\n            - Strictly ensure to not wrap the response in any code block such as ```csv ```.\n\n#### Provided input: \n{{content::file}}",
						"input": [
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							}
						],
						"outputFolder": "/",
						"outputFileName": "tests_output.csv",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				],
				"Process Workshop Notes": [
					{
						"id": "2213ba9e-c9e2-4436-84fc-ee919c580091",
						"name": "Process Workshop Notes",
						"description": "Standardise and summarise the transcript of a workshop",
						"prompt": "Role and Task:\nYou are a highly skilled Business Analyst with expertise in analysing workshop discussions and translating them into structured, actionable requirements for system integrations. Your goal is to meticulously review the provided transcript, extract relevant details, and categorise them into a comprehensive requirements document. This document will form the basis for creating user stories and guiding the implementation process.\n\nCore Focus:\nIntegration Requirements: Identifying systems, interactions, and requirements around frequency, data exchange, dependencies, and constraints.\nWorkshop Objective: Clearly articulate the purpose and goals of the discussion.\nSystem Context: Understand the current state of involved systems, their limitations, and integration opportunities.\nCategorisation: Organise extracted information into a structured format with distinct sections for decisions, requirements, constraints, and next steps.\nInstructions:\nReview the Transcript: Thoroughly examine the transcript for details related to integration and system interactions.\nIdentify Key Details: Extract all actionable information such as current state, integration requirements, frequency, priorities, dependencies, and constraints.\nDocument Objectively: Ensure all decisions, open questions, and relevant information are captured without any omissions or personal bias.\nOrganise and Categorise: Present the findings in a clear, logical structure that enables seamless understanding and follow-up.\nEnsure Completeness: Include all relevant details from the transcript, even if they appear tangential, to avoid loss of information.\nOutput Format:\nThe output must be delivered in Markdown format with the following structure:\n\n# [Workshop Title]  \n\n## Workshop Overview  \n**Date:** [Insert Date]  \n**Facilitator:** [Insert Name]  \n**Participants:**  \n- [Participant Name or Role 1]  \n- [Participant Name or Role 2]  \n\n**Objective:** To define and document integration requirements for [specific systems/processes].  \n\n---\n\n## Key Insights and Summary  \n\n### Decisions Made  \n- List of key decisions derived from the transcript.\n\n### Open Questions  \n- List of unresolved questions from the transcript.\n\n---\n\n## Detailed Requirements Document  \n\n### 1. Integration Requirements  \n\n#### [Requirement Name or ID]\n- **Description:** A concise description of the integration requirement.  \n- **System Interaction:** Systems involved and their interaction flow.  \n- **Frequency:** The frequency or timing of this requirement (e.g., real-time, batch, daily).  \n- **Priority:** The importance or urgency (e.g., high, medium, low).  \n- **Dependencies:** Any systems, APIs, or processes this requirement relies on.  \n- **Constraints:** Limitations or conditions impacting this requirement.  \n- **Additional Notes:** Any relevant details or observations.\n\n### 2. Data Exchange Requirements  \n\n#### [Requirement Name or ID]  \n- **Description:** A concise description of the data exchange requirement.  \n- **Source System:** The system providing the data.  \n- **Target System:** The system receiving the data.  \n- **Frequency:** The regularity of the data exchange.  \n- **Format and Protocols:** Expected data format and communication protocols.  \n- **Dependencies:** Systems, tools, or processes impacting data exchange.  \n- **Additional Notes:** Key observations or additional details.\n\n### 3. Relevant Details for User Stories  \n- List all actionable items, edge cases, and critical observations to inform user story creation.  \n\n---\n\n## Constraints and Dependencies  \n- Highlight integration constraints, such as system limitations or regulatory requirements.  \n- List all dependencies impacting successful integration delivery.  \n\n---\n\n## Outstanding Issues and Next Steps  \n\n### Issue 1: [Brief Description]  \n- **Responsible Party:** [Name/Role]  \n- **Resolution Deadline:** [Insert Deadline or N/A]  \n\n---\n\n## Appendix  \n\n### Workshop Notes  \n- Summary of participant contributions, including specific concerns, suggestions, or objections.  \n- Details that do not fit into other sections but are important for reference.\n\n### Glossary  \n- Definitions of technical terms, acronyms, or jargon used in the transcript.\n\n---\n\n### Example Transcript Placeholder:  \n```plaintext\n{Insert Transcript Here}\n\n\nTranscript:\n{{content::file}}",
						"input": [
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							}
						],
						"outputFolder": "/",
						"outputFileName": "workshop_output.md",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				],
				"Review Code": [
					{
						"id": "4e227235-cade-46c0-8e32-8d13a895ad47",
						"name": "Review Code",
						"description": "Review code against its detailed design documentation",
						"prompt": "Act as an expert Azure Developer. I have shared the output of a logic app standard components.\nYour task is to review and refine those components:\n    - Cross-check the detailed workflow.json against the detailed design document.\n    - Validate the workflow.json\n    \nKey Review Steps:\n    - Ensure transformation rules are correctly implemented\n    - Verify if Try Scope and Catch Scope is implemented in the workflow or not.\n    - Verify if workflow type is stateful or not.\n    - Verify if serviceProviderConnections is used instead of managedApiConnections for the built-in connectors which are based on the service provider model.\n    - Verify if Service Provider type actions are used, it has \"serviceProviderConfiguration\" included in the input section.\n    - Verify if there are any other run time or compile time validation error present in the workflow.json.\n    - Verify the parameters.json contains all parameters used in connection.json and workflow.json.\n    - Verify if all the connections in the workflow.json are included in connection.json\n    - Verify the operationId, inputs , outputs , parameters of the actions based on the connectors and below documentations.\n        - ftp - https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/ftp/\n        - sftp - https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/sftp/\n        - Azure Blob Storage - https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/azureblob/\n        - Azure File Storage - https://learn.microsoft.com/en-us/azure/logic-apps/connectors/built-in/reference/azurefile/ \n\nCode -\n\n{{content::file}}\n\nDetaild Design:\n\n{{detailed::file}}",
						"input": [
							{
								"name": "content",
								"description": "Input file",
								"type": "input",
								"value": "/",
								"required": true
							},
							{
								"name": "detailed",
								"description": "Input for detailed",
								"required": true,
								"type": "string",
								"value": "/"
							}
						],
						"outputFolder": "/",
						"outputFileName": "review_output.md",
						"temperature": 0.7,
						"processFormat": "eachFile"
					}
				],
				"Sub 1.2": {
					"Boomi to Azure Detailed Design": [
						{
							"id": "9e5b3d5e-3f5e-4db1-a680-4632adabbd18",
							"name": "Boomi to Azure Detailed Design",
							"description": "Produce a detailed design documentation using a target component, high level design and the relevant current state documentation.",
							"prompt": "You are an expert Azure Architect. Your task is to create a detailed design for a specific Azure component required by a high-level design for an integration implemented in Boomi.\n\n### Task Requirements:\n- Generate a comprehensive design for the Azure component.\n- Focus on the details directly linked to this Azure component from the current state documentation.\n- Exclude examples for data mappings unless explicitly mentioned.\n\n### Design Guidelines:\n1. **Detail-Oriented Sequence Diagram**: Ensure all steps, even minor ones, are captured. Include only relevant systems and highlight interactions specific to the Azure component.\n2. **Content Limitations**:\n   - Omit content if there are no details available under a heading.\n3. **Data Checks**: Document all necessary checks before any data insertions or updates.\n4. **Error Handling**: Utilize standard HTTP error codes unless custom codes are required. Return meaningful HTTP status for errors.\n5. *General**: Do not give locations of information provide the actual information instead.\n6. Assume that none of the documentation given will be available after this point.\n\n### Template for the Detailed Design Document:\n\n#### # Detailed Design Document\n\n#### ## 1. Design Overview\n- Provide a concise summary of the component, including its purpose, scope, and key functionalities.\n\n## Component Information\n|                                       |                                                         |\n|---------------------------------------|---------------------------------------------------------|\n| **Version**                           | 1.0                                                     |\n| **Description**                       | [Description of component]                              |\n| **Deployed Name**                     | [Azure Service Name for component]                      |\n| **Function**                          | [Function or workflow name]                             |\n| **Source System**                     | [Source system name incase of blob source]              |\n| **Destination System**                | [Destination system name]                               |\n| **Consumer**                          | [System that invokes this component]                    |\n\n\n#### ## 2. Implementation Details\n\n##### ### 2.1 Sequence Diagram\n- Include a detailed sequence diagram showing the flow of events and interactions directly involving the target component.\n- Do not include subsequents steps made by other components.\n- Ensure all steps, even minor ones, are captured. Include only relevant systems and highlight interactions specific to the Azure component.\n- Use Mermaid syntax for the sequence diagram.\n\n\n##### ### 2.2 Access Control\n\n**#### 2.2.1 Ingress**\n- Describe ingress access controls, such as authentication and authorisation mechanisms used.\n  - Example: Access controlled by Managed Identity. Integration Apps use Managed Identity.\n\n**#### 2.2.2 Egress**\n- Describe egress access controls, such as authentication and authorisation mechanisms used.\n  - Example: Oracle access via connection string and credentials using Network Security Group (NSG) rules.\n\n\n##### ### 2.3 Error Handling\n- Outline error handling strategies for various failure scenarios involving the target component.\n  - Example: Use dead letter messages for validation failures or publish integration log events for technical errors.\n\n\n##### ### 2.4 Business Logic and Technical Details\n- Provide detailed descriptions of business logic, rules, calculations, and technical specifics (e.g., DB queries, Custom scipts, custom functions) relevant to the Azure component.\n\n\n#### ## 3. Data Mapping\n\n#### ### 3.1 Process Mapping Details\nRequirements:\n- The process name must be detailed and specific.\n- The process name cannot be generic and must be unique.\n- The process name cannot include the destination system.\n- If the process is done for multiple destination systems create a table for each combination.\n- If the destination system is not directly used by the component ignore it.\n- You must generate the Process Mapping List following the format below.\n- You must generate the Process Mapping Tables following the format below.\n- You should follow the instructions.\n- Do not generate the instructions.\n- The tables should be as detailed and complete as possible.\n\nInstructions (DO NOT generate these instructions):\n - Thought 1: I need to identify all destination systems interacting directly with the component.\n - Action 1: Utilise section 1.3 of the HLD to understand the flow and processes handled by the Target Component.\n - Observation 1: I notice that there are [number] destination systems handled directly by the component.\n - Thought 2: I need to identify of the [number] destination systems how many processes each one has.\n - Action 2: If the flow interacts with the destination system in any way I need to record the process name and destination system.\n - Observation 2: [number] processes and destination system combinations handle data and need to be considered.\n - Thought 3: I need to generate the complete mapping tables for each of the [number] processes involving [number] systems.\n - Action 3: I generate 6 detailed and complete mapping tables.\n - Observation 3: The mapping tables are complete and relevant and follow the format.\n - Action 4: Finished mapping details section.\n\n**Process Mapping List Format**:\n  System A:\n    - Process B\n    - Process C\n  System B:\n    - Process B\n    - Process E\n\n**Process Mapping Tables Format**:\n\n  [Destination System A]: [Process B]\n  | Source        | Source Field      | Source Path            | Type   | Conversion Logic | Destination   | Destination Field   | Destination Path         | Type   |\n  |---------------|-------------------|------------------------|--------|------------------|---------------|---------------------|--------------------------|--------|\n\n  [Destination System A]: [Process C]\n  | Source        | Source Field      | Source Path            | Type   | Conversion Logic | Destination   | Destination Field   | Destination Path         | Type   |\n  |---------------|-------------------|------------------------|--------|------------------|---------------|---------------------|--------------------------|--------|\n\n  [Destination System D]: [Process B]\n  | Source        | Source Field      | Source Path            | Type   | Conversion Logic | Destination   | Destination Field   | Destination Path         | Type   |\n  |---------------|-------------------|------------------------|--------|------------------|---------------|---------------------|--------------------------|--------|\n\n  [Destination System D]: [Process E]\n  | Source        | Source Field      | Source Path            | Type   | Conversion Logic | Destination   | Destination Field   | Destination Path         | Type   |\n  |---------------|-------------------|------------------------|--------|------------------|---------------|---------------------|--------------------------|--------|\n\n\n\n\n\n##### ### 3.3 Samples\n- Provide request and response payload examples if applicable. Only include those directly involving the target component.\n\n**Example Payloads**:\n- **Request**:\n  ```json\n  {\n    \"field\": \"value\"\n  }\n  ```\n\n- **Response**:\n  ```json\n  {\n    \"field\": \"value\"\n  }\n  ```\n\n\n#### ## 4. Outstanding Questions\n- List unresolved questions or dependencies requiring further clarification.\n\n\n### Inputs:\n- **Target Component**: \n{{content::file}}\n- **High-Level Design Document**: \n{{HLD::file}}\n- **Current State Documentation**: \n{{current::file}}\n\n### Output Requirements:\n- Ensure output is provided in Markdown format for easy readability and integration.\n\n",
							"input": [
								{
									"name": "content",
									"description": "Input file",
									"type": "input",
									"value": "/",
									"required": true
								},
								{
									"name": "HLD",
									"description": "Input for HLD",
									"required": true,
									"type": "string",
									"value": "/"
								},
								{
									"name": "current",
									"description": "Input for current",
									"required": true,
									"type": "string",
									"value": "/"
								}
							],
							"outputFolder": "/",
							"outputFileName": "detailed_output.md",
							"temperature": 0.7,
							"processFormat": "eachFile"
						}
					],
					"Boomi to Azure High Level Design Review": [
						{
							"id": "09f4377a-1973-4645-8d40-070ea8c1e29a",
							"name": "Boomi to Azure High Level Design Review",
							"description": "Reviewing the high level design for an Azure solution based on documentation of a Boomi integration.",
							"prompt": "Act as an expert Azure Architect. I have shared the original current-state documentation of a\nBoomi integration and an Azure High-Level Design (HLD) generated from it in the earlier messages.\nYour task is to review and refine the HLD to ensure:\n\n    - Cross-check the HLD against the current state documentation to ensure consistency and accuracy.\n    - Validate that all design principles outlined in the HLD prompt have been followed.\n    - Identify and address any gaps, ambiguities, or incorrect assumptions in the HLD.\n    - Ensure the architecture diagram and sequence diagrams reflect the correct process flow, systems, and interactions.\n    - Add or improve documentation details where necessary for clarity and completeness.\n\nKey Review Steps:\n\n    - Validate that each integration component in the \"Integration Components Table\" corresponds to an equivalent in the current state documentation and that no functionality is missing or incorrectly translated.\n    - Check that all flows in the \"Flows Table\" are accurate, complete, and follow the expected protocols and system interactions from the current state documentation.\n    - Review diagrams for correctness, adherence to best practices, and clarity. Revise or redraw if required.\n    - Evaluate business logic and ensure rules and transformations are aligned with the integration purpose.\n    - Add or clarify key decisions and assumptions where appropriate, especially regarding technology choices and their alignment with Azure best practices.\n\nOutput Requirements:\n\n    - The revised HLD with all corrections and improvements.\n    - A \"Changelog\" section at the end of the HLD document summarising all modifications, including what was added, updated, or removed and why.\n\n\nHLD:\n\n{{content::file}}\n\nDocumentation:\n\n{{documentation::file}}",
							"input": [
								{
									"name": "content",
									"description": "Input file",
									"type": "input",
									"value": "/",
									"required": true
								},
								{
									"name": "documentation",
									"description": "Input for documentation",
									"required": true,
									"type": "string",
									"value": "/"
								}
							],
							"outputFolder": "/",
							"outputFileName": "review_output.md",
							"temperature": 0.7,
							"processFormat": "eachFile"
						}
					],
					"Boomi to Azure High Level Design": [
						{
							"id": "4eb2d8f8-b3f3-46c7-8dc3-4f624a51796a",
							"name": "Boomi to Azure High Level Design",
							"description": "Generating the high level design for an Azure solution based on documentation of a Boomi integration.",
							"prompt": "Assume the role of a Senior Azure Integration Architect responsible for designing and documenting\n cloud-native integration solutions. Your task is to analyse the current Boomi-based integration,\n  paying particular attention to data transformations, data flows, and error handling mechanisms,\n and produce a High-Level Design (HLD) document for an Azure-based solution.\n\n\n## Azure Integration Design Guidelines:\n\n## 1. Azure Service Alignment\nLeverage Azure services that closely match the functionality of existing Boomi components to ensure efficient migration and performance.\n\n## 2. File and Email Operations\n- Use **Azure Logic Apps** or **Azure Data Factory (ADF)** for:\n  - Fetching files from SFTP.\n  - Reading or sending emails.\n\n## 3. Business Logic - [This is the most important part of the design]\n- Azure Functions: Use a single Azure Function for the entire integration process to handle processes like:\n      - Transformations, validations, and error handling.\n      - Fetching data from the APIs.\n      - Loading data into Oracle and Snowflake databases. \nThis ensures simplicity and reduces deployment overhead. Multiple Functions should be avoided where unnecessary\n- Azure Function can be triggered on a schedule (Timer Trigger) to perform operations. Avoid Logic Apps just for this purpose\n\n## 4. Decoupling\n- Use **Azure Service Bus** for decoupling workflows only when required for design or operational flexibility.\n\n## 5. File Storage\n- Use **Azure Blob Storage** for storing files, but only if file handling is explicitly involved.\n\n## 6. Database Usage\n- Avoid using any databases in the integration layer. Databases are not required for integration purposes.\n\n## 7. Component Simplicity\n- Do not add an Azure Storage component if files are not part of the process.\n- Adhere to the **Keep It Simple, Stupid (KISS)** principle. Avoid adding unnecessary components or complexity, especially if they are not present in the existing Boomi implementation.\n\n## 8. Component Consolidation\n- Prefer using **Azure Logic Apps** or **Azure Functions** if the entire process can be executed within a single component.\n- Operations such as Oracle or Snowflake writes and transformations should occur within a single Function App wherever feasible.\n\n## 9. Triggering Components\n- Allow **Logic Apps** and **ADF** to directly trigger Function Apps without introducing **Service Bus** for decoupling, unless there's a specific requirement.\n\n## 10. Error Handling and Logging\n- Each component should implement its own error handling and logging mechanisms.\n- Do not create a dedicated component solely for error handling or logging.\n\n## 11. Integration Approach\n- Extensibility is not a design requirement. Opt for a **point-to-point integration** strategy to reduce overhead and complexity.\n\n## 12. Component Naming Conventions\n- **Logic Apps**: Use the prefix **Wxx** followed by the workflow name (e.g., *W01 Customer Sync*).\n- **Function Apps**: Use the prefix **MSxx** followed by the task name (e.g., *MS01 Data Transformation*).\n- **ADF Pipelines**: Use the prefix **DFPxx** followed by the workflow name (e.g., *DFP01 Data Import*).\n\nRequirements:\nAnalyse Current State:\n\nReview the provided Boomi integration documentation.\nExtract details about the integration process, including data transformations, data flows, dependencies, and error handling mechanisms.\nDesign Azure Solution:\n\nAdhere strictly to the Azure Integration Design Guidelines (provided in the prompt).\nDesign a solution that uses Azure Logic Apps, Functions, and other components effectively to replicate or enhance the current Boomi implementation.\nConsolidate operations where possible to maintain simplicity and reduce deployment overhead.\nProduce an HLD Document:\n\nUse the provided HLD Template as a strict format for the output.\nEnsure diagrams use Mermaid syntax, including process flowcharts, architecture diagrams, and sequence diagrams.\nInclude:\nA process flowchart detailing the overall integration process.\nAn architecture diagram representing all components and their relationships.\nSequence diagrams for key operations.\nIncorporate detailed integration components and flows tables.\nAddress business logic, key decisions, and assumptions explicitly.\nAdditional Considerations:\n\nFollow naming conventions as per the Azure guidelines.\nAvoid unnecessary components, ensuring adherence to the KISS principle.\nEnsure all data transformations and flows are documented comprehensively.\n\n\nDeliverable Format:\nProduce the HLD in Markdown format using the structure below:\n\n\nHLD Template:\n\n# HLD - [Title of the process]\n\n## **Use Case**\n[Provide a brief description of the use case this HLD addresses.]\n\n---\n\n# **1.0 Introduction**\n\n## **1.1 Document Purpose**\n[Describe the purpose of this document. Include why it is being created and what it aims to achieve.]\n\n## **1.2 HLD Scope**\n[Outline the scope of the HLD. Specify the boundaries and extent of the solution being designed.]\n\n## **1.3 Process flow**\n[Provide a flowchart diagram showing the process flow of the integration. Include any business logic and transformation steps.\nMention all decision making logic. Do not omit any business logic or transformation steps from the documentation provided.\nMake sure to give a complete overview of all the processes and subprocesses involved in the documentation attached\nUse Mermaid syntax. Do not include any technology specifics. You must include all flows and checks related to the mapping.]\n- Do not just mention \"Invoke Subprocess\" Detail out what the sub process does.\n\n---\n\n# **2.0 HLD Details**\n\n## **2.1 Architecture Diagram**\n[Include an architecture diagram that visually represents the overall target system design. You must Mermaid syntax\nYou must include all flows and checks related to the mapping.]\n\n## **2.2 Solution Overview\n[Overview of solution design, including key components, technologies, and architectural patterns.]\n\n## **2.2 Integration Components Table**\n[Provide details about each integration component.\n- Name the components:\n      - Logic Apps - Wxx Name of Workflow\n      - Function Apps - MSxx Name of Task\n      - ADF - DFPxx Name of Workflow\n]\n\n| **Id**  | **Name**                         | **Description**                                              | **System**         | \n|---------|----------------------------------|--------------------------------------------------------------|--------------------|\n| [ID]    | [Component Name]                | [Brief description of the component]                        | [System Name]      |\n\n## **2.3 Flows Table**\n[Document the data or process flows in the system.]\n\n| **Id**  | **Name**             | **Description**                                          | **Source**                         | **Destination**                     | **Protocol** |\n|---------|----------------------|----------------------------------------------------------|------------------------------------|------------------------------------|-------------|\n| [ID]    | [Flow Name]          | [Brief description of the flow]                          | [Source System or Link]            | [Destination System or Link]       | [Protocol]  |\n\n## **2.4 Detailed Component Diagrams**\n\n### **2.4.1 Sequence Diagrams**\n[Include detailed sequence diagram that illustrate the interactions between components. You must use Mermaid syntax.]\n\n\n---\n\n# **3.0 Business Logic**\n[Add any business logic or rules that drive the design decisions.]\n\n# **4.0 Key Decisions, Assumptions**\n[List any key decisions or assumptions made during the design process. Mention the rationale for choosing the tech stack for each component.]\n\nCurrent State Documentation:\n\n{{content::file}}\n\n---",
							"input": [
								{
									"name": "content",
									"description": "Input file",
									"type": "input",
									"value": "/",
									"required": true
								}
							],
							"outputFolder": "/",
							"outputFileName": "hld_output.md",
							"temperature": 0.7,
							"processFormat": "eachFile"
						}
					],
					"MuleSoft Documentation Generation": [
						{
							"id": "57bf51e3-285e-43d9-b4be-5d62f556c125",
							"name": "MuleSoft Documentation Generation",
							"description": "Uses the folder structure and codebase of the component and its dependencies to generate markdown documentation for the component.",
							"prompt": "# Mulesoft Integration Documentation Prompt\n\nYou are tasked with documenting a parent integration process based on the provided Mulesoft entry component and dependencies code.\n\nThis documentation must be exhaustive, leaving no detail omitted, and should be easily understandable by a Technical Business Analyst. The focus is on ensuring all technical and business aspects, including API paths, database queries, transformations, and orchestration logic, are clearly documented. Every detail, including custom logic, assumptions, and technical processes, must be captured thoroughly.\n\n## Key Documentation Requirements\n- **Output Format**: Provide the results in **markdown**.\n- **Clarity**: Describe the logic and processes in **plain English**, avoiding programming code or platform-specific IDs wherever possible.\n- **Completeness**: \n  - Ensure no technical or business detail is overlooked.\n  - Capture API paths, database queries, and any transformations comprehensively.\n  - Document custom transformation logic and assumptions in detail.\n- **Abstraction Level**: Focus on explaining business logic and processes rather than platform-specific implementation nuances.\n- **Error Handling and Monitoring**: Include details about how the process handles errors, retries, and logging/monitoring mechanisms.\n- **Length**: Keep the response concise yet complete, with a maximum of 1000 lines.\n\n## Documentation Structure\n\n### 1. Business Outcomes\n- Highlight the key business benefits and outcomes driven by the parent process.\n- Connect these outcomes to overarching business goals or operational efficiencies.\n\n### 2. Requirements\n#### Functional Requirements\n- Detail the functional objectives of the parent process. Include all functionalities incorporated and their roles.\n\n#### Non-Functional Requirements\n- Address considerations such as performance thresholds, security protocols, scalability, and compliance needs.\n\n#### Dependencies\n- List all external systems, applications, or prerequisites required for the process to work as intended.\n\n### 3. Process\n#### High-Level Overview\n- Summarise the role of the parent process in the integration flow.\n\n#### Step-by-Step Explanation\n- Break down each step in the parent process, including decision points, branching logic, and expected outcomes.\n- Explain how child processes and dependencies are invoked and their roles in the overall workflow.\n\n### 4. Technical Details\n- **API Paths**: Provide exact paths and details of APIs used in the process.\n- **Database Details**: Specify database names, queries, and key data involved in the process.\n- **Transformations**: Describe input/output data transformations and any custom logic applied.\n- **Orchestration Logic**: Detail how tasks and processes are coordinated, including any dependencies or sequencing.\n- **Error Handling**: Explain mechanisms for handling errors, retries, and escalations.\n- **Monitoring/Reporting**: Document tools, metrics, and mechanisms used to monitor the process.\n\n### 5. Mapping (if applicable)\nProvide a detailed mapping table of fields between source and target systems. Include any transformation rules or logic applied during data transfer.\n\n#### Example Table\n| **Source Field**      | **Target Field**      | **Transformation Logic**                      |\n|-----------------------|-----------------------|-----------------------------------------------|\n| source_field_name     | target_field_name     | Describe transformation or business rules.   |\n\nExample Content\nEntry Component:\n   Define the entry point of the IMPL parent process.\n   Detail its orchestration logic for initiating middleware and invoking the parent process.\nSub Processes:\n   - Output should contain business logic and purpose of this dependency within the process.\n   - Detail any logic, rules, or mappings used and how they connect to the overall workflow.   \n\n\n\nHere is the entry component followed by the dependencies: \n{{content::file}}",
							"input": [
								{
									"name": "content",
									"description": "Input file",
									"type": "input",
									"value": "/",
									"required": true
								}
							],
							"outputFolder": "/",
							"outputFileName": "mule_output.md",
							"temperature": 0.7,
							"processFormat": "eachFile"
						}
					]
				}
			}
		}
	}
}
